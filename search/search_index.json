{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Useful links Dashboard Patreon Trello Invite link Support server How do I read this wiki? Danger Do not literally type out <> [] | etc Info When referencing commands, Mod commands are in bold . Each category of commands has their own page which can be found on the sidebar. Aliases : [foo|bar] means that you can use either foo or bar Optional : [foo] means that this argument can be ignored (this is usually for clearing settings or for using yourself/the current channel) Optional with default : [foo='muted'] means that it will default to the value if you don't specify anything else Required : <foo> means that you must use this argument for the command to work Many : <foos...> or [foos...] means that you can specify more than one. Massban is an example of a command that uses this. If you wish you use an argument with more than one word, use \"double quotes\" to let the bot you know what you want. Additionally, the bot uses what are called converters which makes specifying roles, members, channels etc easy and fool-proof. When asked to specify a member, you can provide it a mention (pinging the person), an id, their name or their nickname. This principle works for every single command where applicable. How do I set up reaction roles? Check out the reaction roles page There is an example at the bottom of the page of me setting up reaction roles for my bot server that a lot of people seem to find useful. How do I actually configure the bot? Use the website! at https://carl.gg it's much easier than doing it with commands. There's a page for a basic set up and then there is also a page for a more in-depth guide that goes over disabling/enabling commands on a granular level.","title":"Home"},{"location":"#home","text":"Useful links Dashboard Patreon Trello Invite link Support server","title":"Home"},{"location":"#how-do-i-read-this-wiki","text":"Danger Do not literally type out <> [] | etc Info When referencing commands, Mod commands are in bold . Each category of commands has their own page which can be found on the sidebar. Aliases : [foo|bar] means that you can use either foo or bar Optional : [foo] means that this argument can be ignored (this is usually for clearing settings or for using yourself/the current channel) Optional with default : [foo='muted'] means that it will default to the value if you don't specify anything else Required : <foo> means that you must use this argument for the command to work Many : <foos...> or [foos...] means that you can specify more than one. Massban is an example of a command that uses this. If you wish you use an argument with more than one word, use \"double quotes\" to let the bot you know what you want. Additionally, the bot uses what are called converters which makes specifying roles, members, channels etc easy and fool-proof. When asked to specify a member, you can provide it a mention (pinging the person), an id, their name or their nickname. This principle works for every single command where applicable.","title":"How do I read this wiki?"},{"location":"#how-do-i-set-up-reaction-roles","text":"Check out the reaction roles page There is an example at the bottom of the page of me setting up reaction roles for my bot server that a lot of people seem to find useful.","title":"How do I set up reaction roles?"},{"location":"#how-do-i-actually-configure-the-bot","text":"Use the website! at https://carl.gg it's much easier than doing it with commands. There's a page for a basic set up and then there is also a page for a more in-depth guide that goes over disabling/enabling commands on a granular level.","title":"How do I actually configure the bot?"},{"location":"SUMMARY/","text":"Table of contents Home FAQ Basic bot setup Roles Reaction Roles Role management Autoroles and delayed autoroles Logging Logging Modlogs Welcome and leave messages Moderation Moderation Automod Tags and responses Autoresponses (trigger words) Tags (custom commands) Tags - Advanced usage Config Prefixes Managing commands Utilities Announcements Reminders/Timers Highlights/pager Suggestions Starboard Uncategorized utilities Twitch notifications Embeds Premium Music Misc Animals Silly/useless","title":"Table of contents"},{"location":"SUMMARY/#table-of-contents","text":"Home FAQ Basic bot setup","title":"Table of contents"},{"location":"SUMMARY/#roles","text":"Reaction Roles Role management Autoroles and delayed autoroles","title":"Roles"},{"location":"SUMMARY/#logging","text":"Logging Modlogs Welcome and leave messages","title":"Logging"},{"location":"SUMMARY/#moderation","text":"Moderation Automod","title":"Moderation"},{"location":"SUMMARY/#tags-and-responses","text":"Autoresponses (trigger words) Tags (custom commands) Tags - Advanced usage","title":"Tags and responses"},{"location":"SUMMARY/#config","text":"Prefixes Managing commands","title":"Config"},{"location":"SUMMARY/#utilities","text":"Announcements Reminders/Timers Highlights/pager Suggestions Starboard Uncategorized utilities Twitch notifications Embeds","title":"Utilities"},{"location":"SUMMARY/#premium","text":"Music","title":"Premium"},{"location":"SUMMARY/#misc","text":"Animals Silly/useless","title":"Misc"},{"location":"basic-bot-setup/","text":"Basic bot setup Info This is much easier done on the website at https://carl.gg This guide will cover everything you need to do to get started with everything carlbot offers. 1. Setting up the prefix I want the bot to respond when I use the prefix - to do that, I can type !prefix set - . Carlbot offers up to 15 prefixes at once, so I could also add a second prefix by typing !prefix add . 2. Setting up all the channels !log channel <#channel> Sets the channel where carlbot will log things such as message deletions, name changes, role updates. More on that later. !set twitch <#channel> Sets the channel where twitch notifications are sent. !set welcome <#channel> Decides where join/leave/ban messages go, more on that later. 3. Setting up reaction roles Reaction roles work best in their own channels, so carlbot offers a command to create a channel specifically for reaction roles with some permissions that most people will find useful. We can create this channel by typing !rr channel It's recommended that you use !rr make for this if you are new. 4. Setting up modlogs Since we're doing this from a clean slate, I will use !modlogs create to create a channel with the appropriate permissions. If we already had a channel where moderation actions were sent, we could have used !modlogs set <#channel> 5. Setting up starboard !starboard will create the starboard !star limit <count> will change the required number of stars for a post to show up in the starboard. 6. Configuring the log to log what you care about By default, the log will log everything every member does in every channel, this isn't always what we want. Let's say we don't care about message edits, the way we stop those from showing up in the log is by typing !log edit . The !log command takes an event as its argument and tries to figure out what you want toggled. Another thing we can do is ignore messages deleted in certain channels. Maybe we don't care about messages deleted in mod channels. !log ignore #illuminati is how we'd ignore events from the channel #illuminati. Read the full page for more info, it's very customizable. 7. Setting up a mute role By typing !muterole create we can create a role with the permission \"send messages\" denied in every channel. Please note that any future channels created will not be covered by the bot. Users can now mute with the !mute <@member> [time] [reason] command 8. Adding twitch streamers No point setting up a twitch channel if you don't have any streamers to track. I enjoy watching b0aty, so I'll add him by typing !twitch b0aty . Now any time b0aty comes online I will be notified. 9. Setting up join messages First we will set the message sent to the previously set channel with !welcome Hello there $user, glad to have you in the tutorial server . Next up, we can also set a different message to be sent directly to the member upon joining by typing !joindm Hello and welcome to the tutorial server, please read #rules and respect the other members This is far from everything carlbot has to offer, but at this point you will have set up most of the things that you can set up.","title":"Basic bot setup"},{"location":"basic-bot-setup/#basic-bot-setup","text":"Info This is much easier done on the website at https://carl.gg This guide will cover everything you need to do to get started with everything carlbot offers. 1. Setting up the prefix I want the bot to respond when I use the prefix - to do that, I can type !prefix set - . Carlbot offers up to 15 prefixes at once, so I could also add a second prefix by typing !prefix add . 2. Setting up all the channels !log channel <#channel> Sets the channel where carlbot will log things such as message deletions, name changes, role updates. More on that later. !set twitch <#channel> Sets the channel where twitch notifications are sent. !set welcome <#channel> Decides where join/leave/ban messages go, more on that later. 3. Setting up reaction roles Reaction roles work best in their own channels, so carlbot offers a command to create a channel specifically for reaction roles with some permissions that most people will find useful. We can create this channel by typing !rr channel It's recommended that you use !rr make for this if you are new. 4. Setting up modlogs Since we're doing this from a clean slate, I will use !modlogs create to create a channel with the appropriate permissions. If we already had a channel where moderation actions were sent, we could have used !modlogs set <#channel> 5. Setting up starboard !starboard will create the starboard !star limit <count> will change the required number of stars for a post to show up in the starboard. 6. Configuring the log to log what you care about By default, the log will log everything every member does in every channel, this isn't always what we want. Let's say we don't care about message edits, the way we stop those from showing up in the log is by typing !log edit . The !log command takes an event as its argument and tries to figure out what you want toggled. Another thing we can do is ignore messages deleted in certain channels. Maybe we don't care about messages deleted in mod channels. !log ignore #illuminati is how we'd ignore events from the channel #illuminati. Read the full page for more info, it's very customizable. 7. Setting up a mute role By typing !muterole create we can create a role with the permission \"send messages\" denied in every channel. Please note that any future channels created will not be covered by the bot. Users can now mute with the !mute <@member> [time] [reason] command 8. Adding twitch streamers No point setting up a twitch channel if you don't have any streamers to track. I enjoy watching b0aty, so I'll add him by typing !twitch b0aty . Now any time b0aty comes online I will be notified. 9. Setting up join messages First we will set the message sent to the previously set channel with !welcome Hello there $user, glad to have you in the tutorial server . Next up, we can also set a different message to be sent directly to the member upon joining by typing !joindm Hello and welcome to the tutorial server, please read #rules and respect the other members This is far from everything carlbot has to offer, but at this point you will have set up most of the things that you can set up.","title":"Basic bot setup"},{"location":"faq/","text":"FAQ How do I create reaction roles? Most people are probably best off using !rr make simply because it guides you through the process and tries to tell you what went wrong if any. Other ways of doing it includes using !rr aio which results in the same result as !rr make but with just a single command, it uses some weird syntax if you are unfamiliar, so I would recommend sticking to !rr make until you are familiar with the bot. Here is a screenshot of me setting up unique reaction roles for my bot help server Why does the bot complain about requiring more permissions? I've given it manage roles already! The way discord decides if you can add a role or not is based on two things: Does the member adding the role have 'manage roles' Is the member trying to add the role higher in the role hierarchy than the role they're trying to add? Just assign the bot a role that is higher than highest role it has to assign, the role being hoisted does not have to have any special permissions. How do I get a message ID? Discord settings -> Appearance -> Developer mode For reaction roles already set up you can also use !rr show How do I get the bot to announce new members joining? Use the dashboard! https://carl.gg Just make sure to set a welcome channel in the top left box. You find the settings under 'welcome'. I don't want normal users creating tags, but I obviously can't disable tag, what do I do? !tag modonly will make it so that only mods can manage tags, while anyone can still use them I set up a highlight word but it's not working Yes it is. The bot tries to detect when you're reading the chat and not spam you with unnecessary pings. If you wish to see if a message would have triggered any of your words, use !hl match <sentence> Another bot has the same command and they both respond, what do I do? Depends on what you're after. If you need to use both, you're pretty much forced to change the prefix of either bot. If you're after just the non-carlbot command, you can disable it with !disable <command> . If you just want carlbot's command, I suppose you could create an alias using tags and {cmd:cmdname {args}} see the \"Advanced tag usage\" section for more information.","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#how-do-i-create-reaction-roles","text":"Most people are probably best off using !rr make simply because it guides you through the process and tries to tell you what went wrong if any. Other ways of doing it includes using !rr aio which results in the same result as !rr make but with just a single command, it uses some weird syntax if you are unfamiliar, so I would recommend sticking to !rr make until you are familiar with the bot. Here is a screenshot of me setting up unique reaction roles for my bot help server","title":"How do I create reaction roles?"},{"location":"faq/#why-does-the-bot-complain-about-requiring-more-permissions-ive-given-it-manage-roles-already","text":"The way discord decides if you can add a role or not is based on two things: Does the member adding the role have 'manage roles' Is the member trying to add the role higher in the role hierarchy than the role they're trying to add? Just assign the bot a role that is higher than highest role it has to assign, the role being hoisted does not have to have any special permissions.","title":"Why does the bot complain about requiring more permissions? I've given it manage roles already!"},{"location":"faq/#how-do-i-get-a-message-id","text":"Discord settings -> Appearance -> Developer mode For reaction roles already set up you can also use !rr show","title":"How do I get a message ID?"},{"location":"faq/#how-do-i-get-the-bot-to-announce-new-members-joining","text":"Use the dashboard! https://carl.gg Just make sure to set a welcome channel in the top left box. You find the settings under 'welcome'.","title":"How do I get the bot to announce new members joining?"},{"location":"faq/#i-dont-want-normal-users-creating-tags-but-i-obviously-cant-disable-tag-what-do-i-do","text":"!tag modonly will make it so that only mods can manage tags, while anyone can still use them","title":"I don't want normal users creating tags, but I obviously can't disable tag, what do I do?"},{"location":"faq/#i-set-up-a-highlight-word-but-its-not-working","text":"Yes it is. The bot tries to detect when you're reading the chat and not spam you with unnecessary pings. If you wish to see if a message would have triggered any of your words, use !hl match <sentence>","title":"I set up a highlight word but it's not working"},{"location":"faq/#another-bot-has-the-same-command-and-they-both-respond-what-do-i-do","text":"Depends on what you're after. If you need to use both, you're pretty much forced to change the prefix of either bot. If you're after just the non-carlbot command, you can disable it with !disable <command> . If you just want carlbot's command, I suppose you could create an alias using tags and {cmd:cmdname {args}} see the \"Advanced tag usage\" section for more information.","title":"Another bot has the same command and they both respond, what do I do?"},{"location":"config/command-permissions/","text":"Managing commands Info Please consider using the website at https://carl.gg it is much, much easier for this and allows for per-command customization far beyond what commands offer. Info Restricted commands require a bot channel to be set up online Name Example Usage ignore [channels...][commands...] !ignore #general #log #adminsonly \"temp home\" ping activity If no channel is specified, the current channel is ignored. If a command is supplied, it will ignore that command in the specified channel. Manage server bypasses this. You can supply more than one channel and or command. ignore server -- This is essentially the same as making the entire bot mod-only ignore all [commands...] !ignore all \"pc top\" ping This is equal to typing !ignore channel command subcommand in all channels the bot can see, useful if you want to ignore a command in all channels except for one. This will not work for channels created in the future. If the command is already ignored in a channel, this will unignore it. unignore [channels...] [command...] !unignore #general #log temp ping Reverses what !ignore does unignore all -- Unignores all channels (this does not take ignored commands into account) disable <commands...> !disable \"pc top\" rr temp This really disables the command globally from the server, not even manage server bypasses this. enable <commands...> !enable \"pc top\" ping \"tag info\" Enables one or more previously disabled commands. enable all -- Sets all commands to enabled. disable all -- Sets all commands to disabled. enable mod -- Enables all moderation commands disable mod -- Disables all moderation commands enable list -- Shows all enabled/disabled commands. plonk !plonk @Carl#0080 tag create This works almost exactly like !ignore but for users instead. If no command is specified, the user is banned from using the bot completely. unplonk <@member> [command] !unplonk @Carl#0080 Unbans the user from using the bot plonks -- Displays all plonked users. restrict <command> !restrict define This requires a bot channel to utilize. Makes it so that if the command is used outside of the bot channel, the bot will ping the user in the botchannel and give the results there instead. unrestrict <command> !unrestrict d Unrestricts it. Like all commands where you pass in a command, aliases work just as well. set bot <channel> !set bot #botspam Sets the channel used for restricted commands to be redirected to. modonly <command> !modonly echo Makes a command usable by mods only unmodonly <command> !unmodonly dog Removes a command from the modonly list modrole <role> !modrole bot commander Makes it so that any member with the specified role is seen as a moderator by the bot. This does not allow members with this role to kick, ban, mute, warn or any variation of these commands. modrole clear Removes the modrole","title":"Managing commands"},{"location":"config/command-permissions/#managing-commands","text":"Info Please consider using the website at https://carl.gg it is much, much easier for this and allows for per-command customization far beyond what commands offer. Info Restricted commands require a bot channel to be set up online Name Example Usage ignore [channels...][commands...] !ignore #general #log #adminsonly \"temp home\" ping activity If no channel is specified, the current channel is ignored. If a command is supplied, it will ignore that command in the specified channel. Manage server bypasses this. You can supply more than one channel and or command. ignore server -- This is essentially the same as making the entire bot mod-only ignore all [commands...] !ignore all \"pc top\" ping This is equal to typing !ignore channel command subcommand in all channels the bot can see, useful if you want to ignore a command in all channels except for one. This will not work for channels created in the future. If the command is already ignored in a channel, this will unignore it. unignore [channels...] [command...] !unignore #general #log temp ping Reverses what !ignore does unignore all -- Unignores all channels (this does not take ignored commands into account) disable <commands...> !disable \"pc top\" rr temp This really disables the command globally from the server, not even manage server bypasses this. enable <commands...> !enable \"pc top\" ping \"tag info\" Enables one or more previously disabled commands. enable all -- Sets all commands to enabled. disable all -- Sets all commands to disabled. enable mod -- Enables all moderation commands disable mod -- Disables all moderation commands enable list -- Shows all enabled/disabled commands. plonk !plonk @Carl#0080 tag create This works almost exactly like !ignore but for users instead. If no command is specified, the user is banned from using the bot completely. unplonk <@member> [command] !unplonk @Carl#0080 Unbans the user from using the bot plonks -- Displays all plonked users. restrict <command> !restrict define This requires a bot channel to utilize. Makes it so that if the command is used outside of the bot channel, the bot will ping the user in the botchannel and give the results there instead. unrestrict <command> !unrestrict d Unrestricts it. Like all commands where you pass in a command, aliases work just as well. set bot <channel> !set bot #botspam Sets the channel used for restricted commands to be redirected to. modonly <command> !modonly echo Makes a command usable by mods only unmodonly <command> !unmodonly dog Removes a command from the modonly list modrole <role> !modrole bot commander Makes it so that any member with the specified role is seen as a moderator by the bot. This does not allow members with this role to kick, ban, mute, warn or any variation of these commands. modrole clear Removes the modrole","title":"Managing commands"},{"location":"config/prefixes/","text":"Prefixes \u200b Danger !prefix clear leaves you without a prefix meaning you have to mention the bot to set a new one. !prefix set <prefix> is most likely a better choice in most cases By default this is set to ! and ? Name Example Usage !prefix -- Lists the prefixes currently in use by the server !prefix add <prefix> !prefix add \"sudo \" Adds a prefix to be used by the bot (limited to 10) NOTE if you want a two word prefix or a prefix with a space after it or an emoji you must use quotes, this is a discord limitation and can't be fixed !prefix set <prefix> !prefix set \"haha \" Sets the specified prefix to be the ONLY prefix in the server !prefix remove <prefix> !prefix remove ! Removes a prefix, same limits as !prefix add applies here, can't remove mentioning the bot. !prefix clear -- Removes all prefixes except mentioning the bot. This (obviously) means you need to mention the bot to register more prefixes","title":"Prefixes"},{"location":"config/prefixes/#prefixes","text":"\u200b Danger !prefix clear leaves you without a prefix meaning you have to mention the bot to set a new one. !prefix set <prefix> is most likely a better choice in most cases By default this is set to ! and ? Name Example Usage !prefix -- Lists the prefixes currently in use by the server !prefix add <prefix> !prefix add \"sudo \" Adds a prefix to be used by the bot (limited to 10) NOTE if you want a two word prefix or a prefix with a space after it or an emoji you must use quotes, this is a discord limitation and can't be fixed !prefix set <prefix> !prefix set \"haha \" Sets the specified prefix to be the ONLY prefix in the server !prefix remove <prefix> !prefix remove ! Removes a prefix, same limits as !prefix add applies here, can't remove mentioning the bot. !prefix clear -- Removes all prefixes except mentioning the bot. This (obviously) means you need to mention the bot to register more prefixes","title":"Prefixes"},{"location":"logging/logging/","text":"Logging Quick start Choose a channel with !log channel <#channel> Select which events you want logged with !log <event> where event is an event found at the bottom of this page Split up logging into separate channels by using the commands found below Info The command !log aio automatically creates a category, fills it with five channels and splits up logging into them. Info Consider using the website at https://carl.gg Command Example Usage log channel [#channel] !log channel #logs Sets the default channel where logged events go. Leave empty to clear the channel. log [event] !log channelcreate Toggles an event from being logged or not. Leave blank to see current settings. log messagechannel [#channel] !log messagechannel #msglog Sets the channel where message events are logged to. log memberchannel [#channel] !log memberchannel #member-logs Sets the channel where member events are logged to. log joinchannel [#channel] !log joinchannel #hello-bye Sets the channel where the bot logs members joining and leaving to. log serverchannel [#channel] !log serverchannel #server-updates Sets the channel where updates to the server itself are logged. log voicechannel [#channel] !log voicechannel #spying Sets the channel where members joining/moving between/leaving voice channels are logged. log ignore <channels/members...> !log ignore @Carl#0001 #bilderberg #secret-shhh Ignores message events posted in the channels or by the members. log unignore <channels/members...> !log unignore @Carl#0001 #bilderberg Unignores the previous ignores. log [prefix|ip] <prefix> !log ip ! Ignores message deletions, edits and messages within purges starting with the prefixes. log [removeprefix|up] <prefix> !log up ? Unignores previously added prefixes. log export Exports the settings used in this server to be used with the next command. log [import|custom] <perms> !log import 1337 Imports some settings. log aio Creates a category, fills it with five channels and splits up logging into them. Event list Each event that Carl-bot logs has an associated value and channel. The values are only there for ultra-nerds, don't worry about it. Event Associated logging Value Channel delete Deleted messages 1 messagechannel edit Message edits 2 messagechannel purge Bulk message deletion 4 messagechannel discord Discord invites posted 2097152 messagechannel role Member role updates 8 memberchannel avatar Avatar updates 32 memberchannel bans Bans and unbans 192 memberchannel ban Just bans 64 memberchannel unban Just unbans 128 memberchannel join Name or nickname updates 256 joinchannel leave Name or nickname updates 512 joinchannel channels Channel creations, updates and deletions 7168 serverchannel channelcreate Channel creation 1024 serverchannel channelupdate Channel updates 2048 serverchannel channeldelete Channel deletion 4096 serverchannel rolecreate Roles created 65536 serverchannel roleupdate Updates to roles 131072 serverchannel roledelete Roles deleted 262144 serverchannel allroles Roles being created, updated or deleted 458752 serverchannel emoji Emojis being created, updated or deleted 1048576 serverchannel server Updates to the server itself 524288 serverchannel voicejoin Members joining voice channels 8192 voicechannel voicemove Members changing voice channels 16384 voicechannel voiceleave Members leaving voice channels 32768 voicechannel voice All voice events 57344 voicechannel everything Every single event 4194303 depends nothing Nothing! 0 -- default Some messages and member events 1019 depends","title":"Logging"},{"location":"logging/logging/#logging","text":"","title":"Logging"},{"location":"logging/logging/#quick-start","text":"Choose a channel with !log channel <#channel> Select which events you want logged with !log <event> where event is an event found at the bottom of this page Split up logging into separate channels by using the commands found below Info The command !log aio automatically creates a category, fills it with five channels and splits up logging into them. Info Consider using the website at https://carl.gg Command Example Usage log channel [#channel] !log channel #logs Sets the default channel where logged events go. Leave empty to clear the channel. log [event] !log channelcreate Toggles an event from being logged or not. Leave blank to see current settings. log messagechannel [#channel] !log messagechannel #msglog Sets the channel where message events are logged to. log memberchannel [#channel] !log memberchannel #member-logs Sets the channel where member events are logged to. log joinchannel [#channel] !log joinchannel #hello-bye Sets the channel where the bot logs members joining and leaving to. log serverchannel [#channel] !log serverchannel #server-updates Sets the channel where updates to the server itself are logged. log voicechannel [#channel] !log voicechannel #spying Sets the channel where members joining/moving between/leaving voice channels are logged. log ignore <channels/members...> !log ignore @Carl#0001 #bilderberg #secret-shhh Ignores message events posted in the channels or by the members. log unignore <channels/members...> !log unignore @Carl#0001 #bilderberg Unignores the previous ignores. log [prefix|ip] <prefix> !log ip ! Ignores message deletions, edits and messages within purges starting with the prefixes. log [removeprefix|up] <prefix> !log up ? Unignores previously added prefixes. log export Exports the settings used in this server to be used with the next command. log [import|custom] <perms> !log import 1337 Imports some settings. log aio Creates a category, fills it with five channels and splits up logging into them.","title":"Quick start"},{"location":"logging/logging/#event-list","text":"Each event that Carl-bot logs has an associated value and channel. The values are only there for ultra-nerds, don't worry about it. Event Associated logging Value Channel delete Deleted messages 1 messagechannel edit Message edits 2 messagechannel purge Bulk message deletion 4 messagechannel discord Discord invites posted 2097152 messagechannel role Member role updates 8 memberchannel avatar Avatar updates 32 memberchannel bans Bans and unbans 192 memberchannel ban Just bans 64 memberchannel unban Just unbans 128 memberchannel join Name or nickname updates 256 joinchannel leave Name or nickname updates 512 joinchannel channels Channel creations, updates and deletions 7168 serverchannel channelcreate Channel creation 1024 serverchannel channelupdate Channel updates 2048 serverchannel channeldelete Channel deletion 4096 serverchannel rolecreate Roles created 65536 serverchannel roleupdate Updates to roles 131072 serverchannel roledelete Roles deleted 262144 serverchannel allroles Roles being created, updated or deleted 458752 serverchannel emoji Emojis being created, updated or deleted 1048576 serverchannel server Updates to the server itself 524288 serverchannel voicejoin Members joining voice channels 8192 voicechannel voicemove Members changing voice channels 16384 voicechannel voiceleave Members leaving voice channels 32768 voicechannel voice All voice events 57344 voicechannel everything Every single event 4194303 depends nothing Nothing! 0 -- default Some messages and member events 1019 depends","title":"Event list"},{"location":"logging/modlogs/","text":"Modlogs Name Example Usage modlog create [name='modlog'] !modlog create auditlog Creates a modlog where moderation actions will be logged. modlog set <#channel> !modlog set #modlog Sets an already existing channel to send actions to (make sure the bot has the permissions required to post in the channel) modlog clear -- Makes the bot stop logging actions to the channel modlog from <@member or ID> !modlog from @Carl#0001 Retrieves all infractions for a member with the responsible moderator. reason <case_id> !reason 17 Spamming nazi imagery Sets a reason for a modlog entry, useful for cases where you either banned manually or forgot to specify a reason modlog highscores -- Shows the moderators ranked by how many actions they've taken. Useful for transparency and organizing","title":"Modlogs"},{"location":"logging/modlogs/#modlogs","text":"Name Example Usage modlog create [name='modlog'] !modlog create auditlog Creates a modlog where moderation actions will be logged. modlog set <#channel> !modlog set #modlog Sets an already existing channel to send actions to (make sure the bot has the permissions required to post in the channel) modlog clear -- Makes the bot stop logging actions to the channel modlog from <@member or ID> !modlog from @Carl#0001 Retrieves all infractions for a member with the responsible moderator. reason <case_id> !reason 17 Spamming nazi imagery Sets a reason for a modlog entry, useful for cases where you either banned manually or forgot to specify a reason modlog highscores -- Shows the moderators ranked by how many actions they've taken. Useful for transparency and organizing","title":"Modlogs"},{"location":"logging/welcome-messages/","text":"Welcome and leave messages Info Use the dashboard! It allows for easier setup and embeds Info These commands do nothing before using set welcome <#channel> Name Example Usage set welcome <#channel> !set welcome #join-say-hi Sets the channel where welcome/leave/banmsg messages will be posted. [welcome|greet] <text> !greet Welcome {mention}, we've been expecting you Sets up a welcome message that will be sent when a new user joins. [leave|farewell] <text> !farewell Goodbye {user}, maybe it wasn't meant to be... Like !greet but for people leaving banmsg <text> !banmsg {user} just got blown the fuck out Like !greet but for people getting banned [dmjoin|pmjoin|joindm|joinpm] <text> !dmjoin Hello and welcome to {server}, before chatting you need to assign roles in #get-roles Like !greet except it dms the message to the user upon joining testgreet !testgreet Not sure how your welcome/farewell/dm messages actually look? Just type !testgreet and have the bot spit out all of them. All these messages will be sent to the channel saved with !set welcome . Use a command without any text to remove the message. Supports the following variables: {mention} - Pings the user {user} - The name of the user {server} - The name of the server {user(id)} - The ID of the user {user(proper)} - The name including the last four digits (Carl#0001). {server(members)} - The number of members on the server (after the event has happened). Use {ord:{server(members)}} to turn 8102 into 8,102nd etc. Also supports {random: lists, separated by commas} and {math: 1 + 1} math blocks not sure when you'd ever want a math block but random lists are pretty useful.","title":"Welcome and leave messages"},{"location":"logging/welcome-messages/#welcome-and-leave-messages","text":"Info Use the dashboard! It allows for easier setup and embeds Info These commands do nothing before using set welcome <#channel> Name Example Usage set welcome <#channel> !set welcome #join-say-hi Sets the channel where welcome/leave/banmsg messages will be posted. [welcome|greet] <text> !greet Welcome {mention}, we've been expecting you Sets up a welcome message that will be sent when a new user joins. [leave|farewell] <text> !farewell Goodbye {user}, maybe it wasn't meant to be... Like !greet but for people leaving banmsg <text> !banmsg {user} just got blown the fuck out Like !greet but for people getting banned [dmjoin|pmjoin|joindm|joinpm] <text> !dmjoin Hello and welcome to {server}, before chatting you need to assign roles in #get-roles Like !greet except it dms the message to the user upon joining testgreet !testgreet Not sure how your welcome/farewell/dm messages actually look? Just type !testgreet and have the bot spit out all of them. All these messages will be sent to the channel saved with !set welcome . Use a command without any text to remove the message. Supports the following variables: {mention} - Pings the user {user} - The name of the user {server} - The name of the server {user(id)} - The ID of the user {user(proper)} - The name including the last four digits (Carl#0001). {server(members)} - The number of members on the server (after the event has happened). Use {ord:{server(members)}} to turn 8102 into 8,102nd etc. Also supports {random: lists, separated by commas} and {math: 1 + 1} math blocks not sure when you'd ever want a math block but random lists are pretty useful.","title":"Welcome and leave messages"},{"location":"misc/animals/","text":"Animals Warning Do not underestimate how spammy your users will be with these commands, restricting them is recommended. Name Example Usage cat -- Gives you a random cat. All of these commands use a database of images collected by scraping reddit, this means you won't get the same 150 dogs that most bots offer through that one popular website. Currently I have about 15000 animal pictures saved. dog -- ^ aww -- ^ catbomb -- Gives you 5 links instead of just one, only use this if you LOVE cats! dogbomb -- ^ but dogs awwbomb -- ^ but just cute animals","title":"Animals"},{"location":"misc/animals/#animals","text":"Warning Do not underestimate how spammy your users will be with these commands, restricting them is recommended. Name Example Usage cat -- Gives you a random cat. All of these commands use a database of images collected by scraping reddit, this means you won't get the same 150 dogs that most bots offer through that one popular website. Currently I have about 15000 animal pictures saved. dog -- ^ aww -- ^ catbomb -- Gives you 5 links instead of just one, only use this if you LOVE cats! dogbomb -- ^ but dogs awwbomb -- ^ but just cute animals","title":"Animals"},{"location":"misc/silly-useless/","text":"Silly/useless Name Example Usage [pc|postcount] [@member] !pc @Carl#0080 Shows the amount of messages the bot has seen the member post. postcount top -- Shows the all time 20 most active members as far as the bot's concerned. [aesthetics|ae] !ae 600 iq Returns your text as fullwidth. The example would return \"\uff16\uff10\uff10\uff49\uff51\" [smallcaps|sc] !sc neumann Returns your text as smallcaps. The example would return \"\u0274\u1d07\u1d1c\u1d0d\u1d00\u0274\u0274\" 8ball !8ball will anyone ever love me? It's like any other 8ball command on discord. Annoying, useless and unreasonably popular. echo [#channel] !echo #general Is this enough to pass the turing test? Makes the bot say the message in the mentioned channel or in the channel the comand was used in if no channel is supplied. speak [@member] !speak @Yenni#2794 Uses Markov chains to generate sentences based on what that person has said in the past. space !space \u2705This is a test. \u2705This \u2705is \u2705a \u2705test \u2705sentence. \u2705","title":"Silly/useless"},{"location":"misc/silly-useless/#sillyuseless","text":"Name Example Usage [pc|postcount] [@member] !pc @Carl#0080 Shows the amount of messages the bot has seen the member post. postcount top -- Shows the all time 20 most active members as far as the bot's concerned. [aesthetics|ae] !ae 600 iq Returns your text as fullwidth. The example would return \"\uff16\uff10\uff10\uff49\uff51\" [smallcaps|sc] !sc neumann Returns your text as smallcaps. The example would return \"\u0274\u1d07\u1d1c\u1d0d\u1d00\u0274\u0274\" 8ball !8ball will anyone ever love me? It's like any other 8ball command on discord. Annoying, useless and unreasonably popular. echo [#channel] !echo #general Is this enough to pass the turing test? Makes the bot say the message in the mentioned channel or in the channel the comand was used in if no channel is supplied. speak [@member] !speak @Yenni#2794 Uses Markov chains to generate sentences based on what that person has said in the past. space !space \u2705This is a test. \u2705This \u2705is \u2705a \u2705test \u2705sentence. \u2705","title":"Silly/useless"},{"location":"moderation/automod/","text":"Info It's Highly recommended to use the dashboard for setting up automod. https://carl.gg/ Warning Invitespam and linkspam does not work without setting a rate limit with !linkspam/invitespam <rate> [per=1] Punishments The punishments available are delete - Deletes the message warn - Warns the offender tempmute <duration> - Temporarily mutes for the duration, format the time like 3h42m mute - Indefinitely mutes kick - Kicks the offender tempban <duration> - Temporarily bans the offender for the duration ban - Bans the offender defer - Sends the context to the drama channel and lets mods vote on it message - Sends a message to the channel warning the member dm/pm - Sends a private message to the offender You can add more than one punishment by separating them with commas. Name Example Usage [sm|slowmode] [rate] [per] !slowmode 5 25 Rate is the number of messages you can post in each time frame. Per is the timeframe. If you only supply one value, it sets that value as the per. (1/x) slowmode [punishment|punish|p] <punishments...> !sm p delete, tempmute 20m Sets the punishment(s) for hitting the rate limit. attachmentspam [rate] [per=1] !attachmentspam 3 5 Rate limits the number of attachment a member can post in a specific timeframe attachmentspam punishment <punishments...> !attachmentspam p mute, defer Sets the punishment(s) for hitting the rate limit. mentionspam <rate> [per=1] !mentionspam 25 5 Enables the bot to automatically punish mentionspammers. By default this action is muting, but it can be changed using the next command. mentionspam punishment <punishments...> !mentionspam p tempban 20h Sets the punishment(s) for hitting the rate limit. linkspam <rate> [per=1] !linkspam 1 Sets the link rate limit. Use the example command to block all links. linkspam bl <links...> !linkspam bl reddit.com twitter.com Blacklists one or more links. linkspam wl <links...> !linkspam wl discordapp.com facebook.com Whitelists one or more links linkspam unbl <links...> !linkspam unbl reddit.com Removes one ore more links from the blacklist linkspam unwl <links...> !linkspam unwl discordapp.com Removes one or more links from the whitelist linkspam clearwl -- Clears the whitelist linkspam clearbl -- Clears the blacklist linkspam block -- Block means it punishes all non-whitelisted links linkspam off -- Off means it only punishes blacklisted links linkspam norole -- Like on except it only punishes those without roles linkspam punishment <punishments...> !linkspam p delete, mute, defer Sets the punishment(s) for posting links. linkspam -- Shows the current settings invitespam <rate> [per=1] !invitespam 1 Sets the link rate limit. Use the example command to block all invites. invitespam bl <invites...> !invitespam bl discord.gg/wow Adds the server the invite goes to to the blacklist. invitespam wl <invites...> !invitespam wl discord.gg/xd Adds the server the invite goes to to the whitelist. invitespam unbl <invites...> !invitespam unbl discord.gg/xd discord.gg/wow Removes the servers the invites point to from the blacklist invitespam unwl <invites...> !invitespam unwl discord.gg/xd discord.gg/wow Removes the servers the invites point to from the whitelist invitespam clearbl -- Removes all servers from the blacklist invitespam clearwl -- Removes all servers from the whitelist !invitespam [on|block] -- Block means it punishes all non-whitelisted invites invitespam off -- Off means it only punishes blacklisted links. invitespam norole -- Same as setting it to 'on' except it only affects members without roles. invitespam punishment <punishments...> !invitespam p mute, delete, defer, message Sets the punishment(s) for posting invites. invitespam -- Shows the invitespam settings. [am|automod] -- Shows an overview of the current automod settings automod drama <channel> !automod drama #watcher Lets you set up a channel where mods can make decisions on rule breakers through reactions. This channel should obviously not be made public. automod log <channel> !automod log #automod Automod actions are pretty different in nature compared to normal modlogs, so with this command you can set the command where automatic actions go. automod [media|mo] <channels...> !am mo #show-off Some servers have channels where you're just meant to post images/links, this command lets you enforce that. automod [unmedia|umo|unmo ] <channels...> !am umo #show-off Removes the media-only restriction from one or more channels. automod [whitelist|wl] <roles/channels> !am wl mods #bilderberg Whitelists roles and or channels so that automod ignores messages posted in/by them. automod [unwhitelist|unwl| <roles/channels> -- Undoes what the above command does. automod [warn|threshold] <limit> !am warn 5 Sets the warn threshold for a punishment to be made !automod [warnpunish|wp] <punishments...> !am wp kick Sets the punishment for hitting the threshold !deletefiles -- Toggles between deleting files and not. \"Safe\" formats include png, jpg, jpeg, webm, mp4, gif, bmp, pdf, txt, tif, svg, webp censor <words...> !censor dick Adds one or more words to the list of blacklisted words censor add <words...> !censor add dick Same as above censor remove <words...> !censor remove dick Removes a word from the blacklist censor list -- Lists all censored words censor clear -- Clears all censored words censor punish <punishments...> !censor p mute, delete, defer Sets up punishments for the words. Defaults to delete and defer capslimit <percentage> !capslimit 70 Punishes messages with x% of its characters being uppercase. The message has to be at least 6 characters long. [capspunish|capsp] !capsp delete Sets the punishment for sending a message which hits the threshold","title":"Automod"},{"location":"moderation/moderation/","text":"Moderation Info Purge Commands ignore pinned messages. Warning Locking down a channel denies the @everyone role send messages as an override in the specified channel. Any roles explicitly granting send messages will override this for anyone with that role. Locking down the server removes send messages from the @everyone role. You set up your server correctly by removing send messages from all non-mod roles. Name Example Usage ban <@member/ID> [days=2] [reason] !ban 102130103012 raiding Bans the member from the server. This works even if the member isn't on the server. If you supply a reason, it will show up in the modlogs and in discord's built in audit log. Days refer to the amount of days to purge messages from them. muterole <role> !muterole kids table Selects a role to use for the mute command muterole create [name='muted'] !muterole create shhh Creates a new role, adds the role as a channel override with \"send messages\" turned off for all text channels and sets it as the server's muterole. muterole update Updates the channel overwrites for the currently chosen muterole in any channels that miss them mute <@member> [time [reason]] !mute @Carl#0001 20h45m spamming Mutes a member (using the muterole, read above) for the specified time. If no time is given, it will mute indefinitely. If a reason is given, it shows up in the mod logs. unmute <@member> !unmute @Carl#0001 Unmutes a member kick <@member> [reason] !kick @Carl#0001 racism Kicks a member. Reason shows up in the modlogs and in audit logs softban <@member> [days=2][reason] !softban @Carl#0001 go away Bans and immediately unbans a member to clear 48 hours of message history. tempban <@user> [days=2][reason] !tempban @Carl#0001 20h big ugly Bans a user for the specified duration regardless if they're on the server or not. massban [days=2]<@members...> !massban 123124151241 @Carl#0001 12152252634 123123901231 Bans more than one person, each ban shows up in the modlog. warn <@member> [reason] !warn @Carl#0001 do not spam reactions Warns a user, pms them the reason and posts it to the modlog. removewarn <case_id> !removewarn 17 Removes a warning by its case id. clearwarn <@member> !clearwarn @Carl#0001 Removes all warnings from a user. purge [count=100] !purge 200 Purges the last howmany messages. purge bot [count=100] !purge bot ? 20 Purges the bot messages (and messages with the specified prefix) from the last howmany messages. purge contains [count=100] !purge contains thanos Purges messages containing the substring purge user [count=100] !purge user @Carl#0001 20 Purges messages from the user purge all [count=100] !purge all 13 Purges the last howmany messages purge embeds [count=100] !purge embeds 12 Purges the last howmany messages with embeds purge emoji [count=100] !purge emoji Purges the last howmany messages containing custom emoji purge files [count=100] !purge files Purges messages with attachments purge images [count=100] !purge images Purges messages with attachments or embeds purge links [count=100] !purge links Purges messages with links purge reactions [count=100] !purge reactions Purges reactions from messages cleanup [count=100] -- Sort of like !purge bot except just for carlbot and works for all prefixes lockdown <#channel> <duration> !lockdown #general 20m Locks the specified channel (or the one the command is used in if none is specified) for [duration] if specified else forever. unlockdown <#channel> !unlockdown #general Undoes what !lockdown does. lockdown server <duration> !lockdown server 20m Locks all channels in the server. unlockdown server !unlockdown server Undoes what !lockdown server ****does.","title":"Moderation"},{"location":"moderation/moderation/#moderation","text":"Info Purge Commands ignore pinned messages. Warning Locking down a channel denies the @everyone role send messages as an override in the specified channel. Any roles explicitly granting send messages will override this for anyone with that role. Locking down the server removes send messages from the @everyone role. You set up your server correctly by removing send messages from all non-mod roles. Name Example Usage ban <@member/ID> [days=2] [reason] !ban 102130103012 raiding Bans the member from the server. This works even if the member isn't on the server. If you supply a reason, it will show up in the modlogs and in discord's built in audit log. Days refer to the amount of days to purge messages from them. muterole <role> !muterole kids table Selects a role to use for the mute command muterole create [name='muted'] !muterole create shhh Creates a new role, adds the role as a channel override with \"send messages\" turned off for all text channels and sets it as the server's muterole. muterole update Updates the channel overwrites for the currently chosen muterole in any channels that miss them mute <@member> [time [reason]] !mute @Carl#0001 20h45m spamming Mutes a member (using the muterole, read above) for the specified time. If no time is given, it will mute indefinitely. If a reason is given, it shows up in the mod logs. unmute <@member> !unmute @Carl#0001 Unmutes a member kick <@member> [reason] !kick @Carl#0001 racism Kicks a member. Reason shows up in the modlogs and in audit logs softban <@member> [days=2][reason] !softban @Carl#0001 go away Bans and immediately unbans a member to clear 48 hours of message history. tempban <@user> [days=2][reason] !tempban @Carl#0001 20h big ugly Bans a user for the specified duration regardless if they're on the server or not. massban [days=2]<@members...> !massban 123124151241 @Carl#0001 12152252634 123123901231 Bans more than one person, each ban shows up in the modlog. warn <@member> [reason] !warn @Carl#0001 do not spam reactions Warns a user, pms them the reason and posts it to the modlog. removewarn <case_id> !removewarn 17 Removes a warning by its case id. clearwarn <@member> !clearwarn @Carl#0001 Removes all warnings from a user. purge [count=100] !purge 200 Purges the last howmany messages. purge bot [count=100] !purge bot ? 20 Purges the bot messages (and messages with the specified prefix) from the last howmany messages. purge contains [count=100] !purge contains thanos Purges messages containing the substring purge user [count=100] !purge user @Carl#0001 20 Purges messages from the user purge all [count=100] !purge all 13 Purges the last howmany messages purge embeds [count=100] !purge embeds 12 Purges the last howmany messages with embeds purge emoji [count=100] !purge emoji Purges the last howmany messages containing custom emoji purge files [count=100] !purge files Purges messages with attachments purge images [count=100] !purge images Purges messages with attachments or embeds purge links [count=100] !purge links Purges messages with links purge reactions [count=100] !purge reactions Purges reactions from messages cleanup [count=100] -- Sort of like !purge bot except just for carlbot and works for all prefixes lockdown <#channel> <duration> !lockdown #general 20m Locks the specified channel (or the one the command is used in if none is specified) for [duration] if specified else forever. unlockdown <#channel> !unlockdown #general Undoes what !lockdown does. lockdown server <duration> !lockdown server 20m Locks all channels in the server. unlockdown server !unlockdown server Undoes what !lockdown server ****does.","title":"Moderation"},{"location":"music/music/","text":"Music Info Music is a premium feature offered to patrons as a way to show my gratitude for helping keep the bot alive Music management Name Example Usage music -- Displays the music settings for the server. music announce <mode> !music announce mention Changes the bot announcement when a new song is played, settings are off, on and mention which will ping the requester. music mode <mode> !music mode selective Decides who can use undisruptive music commands. Values are ffa, restrictive, selective and djonly. ffa simply has no rules, everyone can always do anything. Restrictive is what I imagine 99% of servers will want to use as it restricts things like skipping, changing the volume etc. to djs and mods (manage server). Selective lets you choose exactly which members can use undisruptive commands. Dj only is what it says on the tin, it only lets mods and djs use any commands. music [blacklist|bl] <@members...> !music bl @Carl#0001 @Kintark#0588 Blacklists some members from using commands, only works for restrictive. music [unblacklist|unbl] <@members...> !music unbl @Kintark#0588 Unblacklists some members. music [whitelist|wl] <@members...> !music wl @Carl#0001 @Kintark#0588 Whitelists from members. Only works for selective. music [unwhitelist|unwl] <@members...> !music unwl @Kintark#0588 Unwhitelists some members. music [dj|djrole] [role] !music dj MUSIC OVERLORD Sets the role as the dj role, pass no role to remove. music [limit|sl|skiplimit] !music limit 3 Total number of voteskips required to skip a song. music [ratio|sr|skipratio] !music sl 65 Percentage of non-bot, non-deafened members required to skip a song. music [maxqueue|mq] !music mq 300 Limits the maximum size of the queue. music [userqueue|uq] !music uq 2 Limits a member to a specified number of songs queued at once. Music commands Info Mod commands are as always in bold . Unlike normal commands however, these mod only commands are also available to DJs. Name Example Usage play <name or link> !play despacito Plays the song or playlist from youtube (including livestreams), bandcamp, soundcloud, vimeo, mixer, direct file links. find <query> !find momoland Searches youtube for videos matching your query. You can then respond with the number next to the result to enqueue that result. when <index> !when 3 Estimates when the song at the specified index will be played queue -- Shows the queue, paginated and the full duration of the playlist. np -- Shows the current song being played. skip -- Skips if you're a mod or if you requested the song, voteskips otherwise. oops -- Removes your last queued track (can be used multiple times) movetofront <index> !movetofront 27 Moves the specified song to the head of the queue but does not play it skipto <index> !skipto 22 Skips the song and all songs inbetween to play the specific song link [channel] !link #cool-tunes The linked channel is where all announcements show up. seek <time> !seek 2:21 seek -27 If you give it a MM:SS formatted timestamp it will jump to that part of the song, else it works relative to its current position. stop -- Clears the queue and stops playing the current song. pause -- Pauses the song. resume -- Resumes the song. volume <volume> !volume 75 Changes the volume between 1 and 150% (100 is pretty loud as you can probably tell) shuffle -- Shuffles the playlist. repeat -- Repeats the playlist (the normal kind, not just the same song over and over again) remove <index> !remove 27 Removes the song at the specified index disconnect -- Disconnects the bot from the voice channel and clears the queue. summon [channel] !summon jamming Summons the bot to your channel or to the specified one.","title":"Music"},{"location":"music/music/#music","text":"Info Music is a premium feature offered to patrons as a way to show my gratitude for helping keep the bot alive","title":"Music"},{"location":"music/music/#music-management","text":"Name Example Usage music -- Displays the music settings for the server. music announce <mode> !music announce mention Changes the bot announcement when a new song is played, settings are off, on and mention which will ping the requester. music mode <mode> !music mode selective Decides who can use undisruptive music commands. Values are ffa, restrictive, selective and djonly. ffa simply has no rules, everyone can always do anything. Restrictive is what I imagine 99% of servers will want to use as it restricts things like skipping, changing the volume etc. to djs and mods (manage server). Selective lets you choose exactly which members can use undisruptive commands. Dj only is what it says on the tin, it only lets mods and djs use any commands. music [blacklist|bl] <@members...> !music bl @Carl#0001 @Kintark#0588 Blacklists some members from using commands, only works for restrictive. music [unblacklist|unbl] <@members...> !music unbl @Kintark#0588 Unblacklists some members. music [whitelist|wl] <@members...> !music wl @Carl#0001 @Kintark#0588 Whitelists from members. Only works for selective. music [unwhitelist|unwl] <@members...> !music unwl @Kintark#0588 Unwhitelists some members. music [dj|djrole] [role] !music dj MUSIC OVERLORD Sets the role as the dj role, pass no role to remove. music [limit|sl|skiplimit] !music limit 3 Total number of voteskips required to skip a song. music [ratio|sr|skipratio] !music sl 65 Percentage of non-bot, non-deafened members required to skip a song. music [maxqueue|mq] !music mq 300 Limits the maximum size of the queue. music [userqueue|uq] !music uq 2 Limits a member to a specified number of songs queued at once.","title":"Music management"},{"location":"music/music/#music-commands","text":"Info Mod commands are as always in bold . Unlike normal commands however, these mod only commands are also available to DJs. Name Example Usage play <name or link> !play despacito Plays the song or playlist from youtube (including livestreams), bandcamp, soundcloud, vimeo, mixer, direct file links. find <query> !find momoland Searches youtube for videos matching your query. You can then respond with the number next to the result to enqueue that result. when <index> !when 3 Estimates when the song at the specified index will be played queue -- Shows the queue, paginated and the full duration of the playlist. np -- Shows the current song being played. skip -- Skips if you're a mod or if you requested the song, voteskips otherwise. oops -- Removes your last queued track (can be used multiple times) movetofront <index> !movetofront 27 Moves the specified song to the head of the queue but does not play it skipto <index> !skipto 22 Skips the song and all songs inbetween to play the specific song link [channel] !link #cool-tunes The linked channel is where all announcements show up. seek <time> !seek 2:21 seek -27 If you give it a MM:SS formatted timestamp it will jump to that part of the song, else it works relative to its current position. stop -- Clears the queue and stops playing the current song. pause -- Pauses the song. resume -- Resumes the song. volume <volume> !volume 75 Changes the volume between 1 and 150% (100 is pretty loud as you can probably tell) shuffle -- Shuffles the playlist. repeat -- Repeats the playlist (the normal kind, not just the same song over and over again) remove <index> !remove 27 Removes the song at the specified index disconnect -- Disconnects the bot from the voice channel and clears the queue. summon [channel] !summon jamming Summons the bot to your channel or to the specified one.","title":"Music commands"},{"location":"roles/autoroles/","text":"Autoroles and delayed autoroles Automatic Roles Name Example Usage autorole -- Shows which roles will be added upon joining and if the bot will readd roles when someone leaves and rejoins the server autoroles [readd|reassign] -- Turns reassigning roles on/off autorole add <role> !autorole add peon Autoroles are roles that are given to the user upon joining the server. autorole remove <role> !autorole remove admin -//- autorole [bl|blacklist] <roles...> !autorole bl admin newbie Prevents the mentioned roles from being reassigned autorole unblacklist <roles...> !autorole unblacklist \"fortnite expert\" admin Undoes what !autorole bl does If you have autoroles and reassigned roles, the member will receive the union of both. Delayed autoroles Name Example Usage [tr|timedrole] -- Shows the roles being assigned with their delay timedrole [add|+] <time> <role> !timedrole add 42h19m22s fortnite expert Adds a role to be added with a delay timedrole remove <role> !tr remove newbie Removes the role from being automatically assigned and also cancels any pending roles (Note: all pending delayed roles with the same delay as the removed role will be removed, sorry!)","title":"Autoroles and delayed autoroles"},{"location":"roles/autoroles/#autoroles-and-delayed-autoroles","text":"","title":"Autoroles and delayed autoroles"},{"location":"roles/autoroles/#automatic-roles","text":"Name Example Usage autorole -- Shows which roles will be added upon joining and if the bot will readd roles when someone leaves and rejoins the server autoroles [readd|reassign] -- Turns reassigning roles on/off autorole add <role> !autorole add peon Autoroles are roles that are given to the user upon joining the server. autorole remove <role> !autorole remove admin -//- autorole [bl|blacklist] <roles...> !autorole bl admin newbie Prevents the mentioned roles from being reassigned autorole unblacklist <roles...> !autorole unblacklist \"fortnite expert\" admin Undoes what !autorole bl does If you have autoroles and reassigned roles, the member will receive the union of both.","title":"Automatic Roles"},{"location":"roles/autoroles/#delayed-autoroles","text":"Name Example Usage [tr|timedrole] -- Shows the roles being assigned with their delay timedrole [add|+] <time> <role> !timedrole add 42h19m22s fortnite expert Adds a role to be added with a delay timedrole remove <role> !tr remove newbie Removes the role from being automatically assigned and also cancels any pending roles (Note: all pending delayed roles with the same delay as the removed role will be removed, sorry!)","title":"Delayed autoroles"},{"location":"roles/reaction-roles/","text":"Reaction Roles Info Deleted messages are also cleared from the database. A good tip is to pin the reaction role message to make it immune to purging. Management Name Example Usage rr make -- Starts the interactive setup to get you started with reaction roles rr [list|show] [msg_id] -- Shows the emoji-role pairs and their associated message id, useful for rr add. If a message id is specified, it will show additional information about that particular reaction role. rr add [channel] <msg_id> <emoji> <role> !rr add 1238901239812 :angel: pure Adds the emoji-role pair to the message and the database. NOTE: This message id can belong to other people than carlbot, and the same emoji can be used for different messages for different roles (useful for regional roles) rr addmany [channel] <msg_id> <emoji role...> !rr addmany 1238901239812 :angel: pure :poop: fortnite :grin: league of legends SEPARATE EACH EMOJI-ROLE PAIR WITH A NEWLINE Works like !rr add except it adds more than one role at a time rr remove <msg_id> <role> !rr remove 493018654405951488 fortnite Removes an emoji-reaction pair from the specified bot message. rr clear [msg_id] !rr clear 12343323615155 If you specify a message id, it removes all the roles from the message, if you don't, it will remove all reaction roles from the server. rr bl <msg_id> <roles...> !rr bl 2389742349827 Staff Prevents members with this role from picking up roles from the message. rr wl <msg_id> <roles...> !rr wl 2389742349827 Staff Only members with one of these roles can pick up roles from the message. rr unbl <msg_id><roles...> !rr unbl 2389742349827 Staff Removes a blacklisted role from the indicated reaction role message allowing for the role to pick up new roles from the message. rr unwl <msg_id><roles...> !rr unwl 2389742349827 Staff Removes a whitelisted role from the indicated reaction role message preventing the role from picking up new roles from the message. rr clearbl <msg_id> !rr clearbl 2389742349827 Removes all roles from your blacklist for that set of reaction roles. rr clearwl <msg_id> !rr clearwl 2389742349827 Removes all roles from your whitelist for that set of reaction roles. rr selfdestruct <msg_id> <time> !rr selfdestruct 2389742349827 7d Deletes the message and all of its reaction roles after the time is up. rr edit <msg_id> <title | description> !rr edit 23094823094823490 Games | Click on the games you want to be notified by Edits the title and description, works like it does in the make command Modes Info Modes are per message and change their behavior. Every message has a mode which defaults to normal. Name Example Usage rr unique <msg_id> !rr unique 123817349589 Marks a message as 'unique' meaning a member can only claim one role from this message at a time, this works per message. Automatically removes the old reactions for you rr binding <msg_id> !rr binding 123817349589 A combination of rr verify and rr unique. Allowing for members to limit people to one choice ever. rr link <base_id> <target_id> !rr link 2389742349827 1239179273791283 By linking two or more messages together, only one role from either message can be self-assigned. If you have 30 color roles for instance, linking the two messages together (since the limit is 20/message) allows a smooth, user-friendly experience when picking up roles. rr unlink <msg_id> !rr unlink 2389742349827 This breaks apart the entire group created by !rr link This means if you had three messages linked together, none of them will be after using this command. rr verify <msg_id> !rr verify 123123123123 With this enabled, reactions can only assign roles, not take them away. Additionally the bot automatically removes the reaction after the user reacts. This is useful for servers that want a verification reaction rr drop <msg_id> !rr drop 123123123123 Works sort of like rr verify, except it can only remove roles (and roles are removed when the emoji is added). This can be used for servers that automatically assign a role that you wish to remove. rr normal <msg_id> !rr normal 123123123123 This returns the reaction role message back to a normal reaction role message. Meaning any commands applied to it such as verify or unique will be removed. rr temp <msg_id> <time> !rr temp 2389742349827 24h Patreon only : This allows for roles to be temporarily be assigned to a member and then removed after the designated amount of time. rr reversed <msg_id> !rr reversed 2389742349827 Reacting removes roles, unreacting adds roles. rr lock <msg_id> !rr lock 2389742349827 Locks the message preventing any roles from being handed out. rr limit <msg_id> <limit> !rr limit 2389742349827 5 Limits members to picking up x amount of roles from a message. Advanced/niche Warning These commands come in very handy in certain situations, but may cause confusion to people unfamiliar with how Carl-bot's reaction roles work. Name Example Usage rr move <base_id> <target_id> !rr move 493018654405951488 351050906189692938 Moves the reaction roles from one message to another. This works even if the message was purged (using the message id found in !rr show). rr aio <channel> <color> <title | description> <emoji> <role> !rr aio #reaction eeaaee \"hello there | this is a description\" :red: hello :purple: there SEPARATE EACH EMOJI-ROLE PAIR WITH A NEWLINE This is meant for power users who wish to create everything with just one command. The title and description have to be enclosed in double quotes. rr aiou <channel> <color> <title | description> <emoji> <role> -- Works like !rr aio but also marks the message as unique rr aiov <channel> <color> <title | description> <emoji> <role> -- All in one command to create a verification reaction role. rr aioi <channel> <color> <title | description> <emoji> <role> -- All in one command to create an inverse verification reaction role, i.e. one that only removes roles. !rr fixforeign <msg_id> !rr fixforeign 351050906189692938 Super niche command which can be used to have the bot react to emojis the bot doesn't have access to. One reason you might want to use this is because you want to use google's blob emojis. This command isn't required for these emojis to work, it only makes it so that the bot has its reactions added to the message. YOU HAVE TO REACT TO THE MESSAGE WITH THE EMOJIS YOURSELF BEFORE USING THIS COMMAND rr maxroles <msg_id> [<role> <number>...] !rr maxroles 2389742349827 DPS 10 Want to limit the number of x role? With this, you can. NOTE This checks for how many people have the role, not how many reactions there are. rr [colour|color] <msg_id> <color> !rr color 507068806800211969 #00ee28 Changes the accent color of the specified bot message The fastest and most reliable unique reaction roles of any bot.","title":"Reaction Roles"},{"location":"roles/reaction-roles/#reaction-roles","text":"Info Deleted messages are also cleared from the database. A good tip is to pin the reaction role message to make it immune to purging.","title":"Reaction Roles"},{"location":"roles/reaction-roles/#management","text":"Name Example Usage rr make -- Starts the interactive setup to get you started with reaction roles rr [list|show] [msg_id] -- Shows the emoji-role pairs and their associated message id, useful for rr add. If a message id is specified, it will show additional information about that particular reaction role. rr add [channel] <msg_id> <emoji> <role> !rr add 1238901239812 :angel: pure Adds the emoji-role pair to the message and the database. NOTE: This message id can belong to other people than carlbot, and the same emoji can be used for different messages for different roles (useful for regional roles) rr addmany [channel] <msg_id> <emoji role...> !rr addmany 1238901239812 :angel: pure :poop: fortnite :grin: league of legends SEPARATE EACH EMOJI-ROLE PAIR WITH A NEWLINE Works like !rr add except it adds more than one role at a time rr remove <msg_id> <role> !rr remove 493018654405951488 fortnite Removes an emoji-reaction pair from the specified bot message. rr clear [msg_id] !rr clear 12343323615155 If you specify a message id, it removes all the roles from the message, if you don't, it will remove all reaction roles from the server. rr bl <msg_id> <roles...> !rr bl 2389742349827 Staff Prevents members with this role from picking up roles from the message. rr wl <msg_id> <roles...> !rr wl 2389742349827 Staff Only members with one of these roles can pick up roles from the message. rr unbl <msg_id><roles...> !rr unbl 2389742349827 Staff Removes a blacklisted role from the indicated reaction role message allowing for the role to pick up new roles from the message. rr unwl <msg_id><roles...> !rr unwl 2389742349827 Staff Removes a whitelisted role from the indicated reaction role message preventing the role from picking up new roles from the message. rr clearbl <msg_id> !rr clearbl 2389742349827 Removes all roles from your blacklist for that set of reaction roles. rr clearwl <msg_id> !rr clearwl 2389742349827 Removes all roles from your whitelist for that set of reaction roles. rr selfdestruct <msg_id> <time> !rr selfdestruct 2389742349827 7d Deletes the message and all of its reaction roles after the time is up. rr edit <msg_id> <title | description> !rr edit 23094823094823490 Games | Click on the games you want to be notified by Edits the title and description, works like it does in the make command","title":"Management"},{"location":"roles/reaction-roles/#modes","text":"Info Modes are per message and change their behavior. Every message has a mode which defaults to normal. Name Example Usage rr unique <msg_id> !rr unique 123817349589 Marks a message as 'unique' meaning a member can only claim one role from this message at a time, this works per message. Automatically removes the old reactions for you rr binding <msg_id> !rr binding 123817349589 A combination of rr verify and rr unique. Allowing for members to limit people to one choice ever. rr link <base_id> <target_id> !rr link 2389742349827 1239179273791283 By linking two or more messages together, only one role from either message can be self-assigned. If you have 30 color roles for instance, linking the two messages together (since the limit is 20/message) allows a smooth, user-friendly experience when picking up roles. rr unlink <msg_id> !rr unlink 2389742349827 This breaks apart the entire group created by !rr link This means if you had three messages linked together, none of them will be after using this command. rr verify <msg_id> !rr verify 123123123123 With this enabled, reactions can only assign roles, not take them away. Additionally the bot automatically removes the reaction after the user reacts. This is useful for servers that want a verification reaction rr drop <msg_id> !rr drop 123123123123 Works sort of like rr verify, except it can only remove roles (and roles are removed when the emoji is added). This can be used for servers that automatically assign a role that you wish to remove. rr normal <msg_id> !rr normal 123123123123 This returns the reaction role message back to a normal reaction role message. Meaning any commands applied to it such as verify or unique will be removed. rr temp <msg_id> <time> !rr temp 2389742349827 24h Patreon only : This allows for roles to be temporarily be assigned to a member and then removed after the designated amount of time. rr reversed <msg_id> !rr reversed 2389742349827 Reacting removes roles, unreacting adds roles. rr lock <msg_id> !rr lock 2389742349827 Locks the message preventing any roles from being handed out. rr limit <msg_id> <limit> !rr limit 2389742349827 5 Limits members to picking up x amount of roles from a message.","title":"Modes"},{"location":"roles/reaction-roles/#advancedniche","text":"Warning These commands come in very handy in certain situations, but may cause confusion to people unfamiliar with how Carl-bot's reaction roles work. Name Example Usage rr move <base_id> <target_id> !rr move 493018654405951488 351050906189692938 Moves the reaction roles from one message to another. This works even if the message was purged (using the message id found in !rr show). rr aio <channel> <color> <title | description> <emoji> <role> !rr aio #reaction eeaaee \"hello there | this is a description\" :red: hello :purple: there SEPARATE EACH EMOJI-ROLE PAIR WITH A NEWLINE This is meant for power users who wish to create everything with just one command. The title and description have to be enclosed in double quotes. rr aiou <channel> <color> <title | description> <emoji> <role> -- Works like !rr aio but also marks the message as unique rr aiov <channel> <color> <title | description> <emoji> <role> -- All in one command to create a verification reaction role. rr aioi <channel> <color> <title | description> <emoji> <role> -- All in one command to create an inverse verification reaction role, i.e. one that only removes roles. !rr fixforeign <msg_id> !rr fixforeign 351050906189692938 Super niche command which can be used to have the bot react to emojis the bot doesn't have access to. One reason you might want to use this is because you want to use google's blob emojis. This command isn't required for these emojis to work, it only makes it so that the bot has its reactions added to the message. YOU HAVE TO REACT TO THE MESSAGE WITH THE EMOJIS YOURSELF BEFORE USING THIS COMMAND rr maxroles <msg_id> [<role> <number>...] !rr maxroles 2389742349827 DPS 10 Want to limit the number of x role? With this, you can. NOTE This checks for how many people have the role, not how many reactions there are. rr [colour|color] <msg_id> <color> !rr color 507068806800211969 #00ee28 Changes the accent color of the specified bot message The fastest and most reliable unique reaction roles of any bot.","title":"Advanced/niche"},{"location":"roles/role-management/","text":"Info These commands are for administrators to manage role assignments in their servers. The bot might mention it or you requiring additional permission despite having manage roles . To fix this, make sure both you and the bot have roles higher in the role hierarchy than the role you're trying to assign. This page does not go over reaction roles, click this text to go there instead Name Example Usage !role <member> <role> !role @Carl#0001 fortnite pro Adds/removes a role from the specified member !role add <member> <role> !role add @Carl#0001 idiot Adds a role to the specified member !role remove <member> <role> !role remove @Carl#0001 idiot Removes a role from the specified member !role color <role> <color> !role color weeb #eeaaee Changes the color of a role !role [removeall|purge|clear] <@member> !role removeall @dumbguy#1337 Removes all roles from a member. !temprole <@member> <time> <role> !temprole @coolguy#0001 24h birthday boy Adds a role for some time and removes it after the time is up. Time can be either before or after the role name. !addrank <roles...> !addrank fortnite weeb \"f1 fanatic\" \"koishi fanboy\" \"tomato lover\" Adds one or more roles so that any member can assign it to themselves. !removerank <roles...> !removerank fortnite \"f1 fanatic\" Removes a rank so that it can no longer be self assigned. !rank <role> !rank fortnite Adds/removes the role to the person who used the command. !ranks -- Lists all whitelisted ranks. role create <name> [color] [mentionable=False] [hoist=False] !role create \"cool dude\" eeaaee true true Creates a role. Hoist decides if it shows up in the sidebar or not. !allroles -- Displays list of roles in the server and member count assigned to the role. !role info <role> !role info fortnite Displays the role's Name, Member Count, Color, and when it was created. !role custom <member> <custom_string> !role custom @MichaelAus#9999 +Role 1 -Role 2 Gives the ability to add and remove roles within a single command, useful for removing a pending role whilst granting a member/joined role. !rank custom <custom_string> !rank custom +Role 1 -Role 2 Adds/removes multiple roles to the person using the command. Requires roles to be whitelisted. Bulk management Warning Only one bulk assignment can be used at a time Name Example Usage !role all <role> !role all peon Adds a role to every single member. !role bots <role> !role bots metallic overlord Adds a role to every single bot. !role humans <role> !role humans flesh haver Adds a role to all non-bots !role in <base_role> <assigned_role> !role in \"movie fan\" game of thrones Adds a role (<assigned_role>) to all members with the <base_role> role. In the previous example, all members with the movie fan role would be assigned the game of thrones role. !role rall <role> !role rall admin Removes a role from all members. !role rbots <role> !role rbots people Removes a role from all bots. !role rhumans <role> !role rhumans metallic Removes a role from all humans. !role rin <role> !role rin weeb cool dude Removes a role from all members with the base_role. Previous example would have removed the \"cool dude\" role from all weebs.","title":"Role management"},{"location":"roles/role-management/#bulk-management","text":"Warning Only one bulk assignment can be used at a time Name Example Usage !role all <role> !role all peon Adds a role to every single member. !role bots <role> !role bots metallic overlord Adds a role to every single bot. !role humans <role> !role humans flesh haver Adds a role to all non-bots !role in <base_role> <assigned_role> !role in \"movie fan\" game of thrones Adds a role (<assigned_role>) to all members with the <base_role> role. In the previous example, all members with the movie fan role would be assigned the game of thrones role. !role rall <role> !role rall admin Removes a role from all members. !role rbots <role> !role rbots people Removes a role from all bots. !role rhumans <role> !role rhumans metallic Removes a role from all humans. !role rin <role> !role rin weeb cool dude Removes a role from all members with the base_role. Previous example would have removed the \"cool dude\" role from all weebs.","title":"Bulk management"},{"location":"tags-and-triggers/ccs/","text":"Tags Info Getting tags after they're created can be done without using !tag <name> simply do !<name> Tags can get complicated, see advanced tag usage for a more thorough explanation of the tagscript Name Example Usage [tag get|tag] <lookup> !classdiscords This is how you get tags after they're saved. tag [create|add|+] <name> <content> !tag + test Hello world Makes a tag named test with the content Hello world. tag [delete|del|remove|-] <tagname> !tag - test Removes a tag tag ++ <name> <pastebin link> -- Since tags can have an output shorter than their length, using !tag ++ allows you to make them tag [+=|append] <tagname> <content> !tag += test and my mom Adds content to an already existing tag tag [a|alias] <new> <existing> !tag alias testing test Creates a link to an already existing tag, changes made to the original tag means the aliased tag will also be changed. The name you want for the alias is the first argument, the already existing tag is the second. tag raw <name> !tag raw test retrieves a tag with its markdown (bold, italic, tagscript etc.) removed. tag edit <name> <content> !tag e test bye world Edits the content of an already existing tag. tag nsfw <name> !tag nsfw test Restricts the tag so that it can only be used in channels marked as nsfw tag restrict <name> !tag restrict test To prevent big tags cluttering your chatty channels, this will make the bot post the content in the bot-channel and ping the author. tag stats [@member] !tag stats @Carl#0080 Shows information about the servers tags (uses, top 3, total number of tags). If you mention someone, it will show their tags instead. tag info <name> !tag info test Shows some stats collected about the tag, uses, creation date, last update, owner. tag ownership -- With this enabled (disabled by default) tags are 'owned' meaning that unless you're a mod, you can't edit, append or delete other people's tags (You can still create aliases to people's tags) tag modonly -- With this enabled, only mods can manage tags, non-mods can still use them. tag prompt -- Know how trying to create a tag that already exists asks you if you want to edit, or append? With this disabled (enabled by default) it will default to editing the tag tag claim <name> !tag claim realms Claims a tag from a member who has left the server, only relevant if ownership is enabled tag sub <name> <from> <to> !tag sub invite discord.gg/abc123 discord.gg/xyz999 Replaces every occurance of from_string with to_string in an already existing tag. This can be extremely useful for expired invite links, slightly outdated information, or anything else that allows you to systematically correct your mistakes. [tag list|command|taglist] -- Lists all of the tags on the server tag share <name> !tag share picross Creates a shareable link of a tag so that other users can import it to their servers.","title":"Tags"},{"location":"tags-and-triggers/ccs/#tags","text":"Info Getting tags after they're created can be done without using !tag <name> simply do !<name> Tags can get complicated, see advanced tag usage for a more thorough explanation of the tagscript Name Example Usage [tag get|tag] <lookup> !classdiscords This is how you get tags after they're saved. tag [create|add|+] <name> <content> !tag + test Hello world Makes a tag named test with the content Hello world. tag [delete|del|remove|-] <tagname> !tag - test Removes a tag tag ++ <name> <pastebin link> -- Since tags can have an output shorter than their length, using !tag ++ allows you to make them tag [+=|append] <tagname> <content> !tag += test and my mom Adds content to an already existing tag tag [a|alias] <new> <existing> !tag alias testing test Creates a link to an already existing tag, changes made to the original tag means the aliased tag will also be changed. The name you want for the alias is the first argument, the already existing tag is the second. tag raw <name> !tag raw test retrieves a tag with its markdown (bold, italic, tagscript etc.) removed. tag edit <name> <content> !tag e test bye world Edits the content of an already existing tag. tag nsfw <name> !tag nsfw test Restricts the tag so that it can only be used in channels marked as nsfw tag restrict <name> !tag restrict test To prevent big tags cluttering your chatty channels, this will make the bot post the content in the bot-channel and ping the author. tag stats [@member] !tag stats @Carl#0080 Shows information about the servers tags (uses, top 3, total number of tags). If you mention someone, it will show their tags instead. tag info <name> !tag info test Shows some stats collected about the tag, uses, creation date, last update, owner. tag ownership -- With this enabled (disabled by default) tags are 'owned' meaning that unless you're a mod, you can't edit, append or delete other people's tags (You can still create aliases to people's tags) tag modonly -- With this enabled, only mods can manage tags, non-mods can still use them. tag prompt -- Know how trying to create a tag that already exists asks you if you want to edit, or append? With this disabled (enabled by default) it will default to editing the tag tag claim <name> !tag claim realms Claims a tag from a member who has left the server, only relevant if ownership is enabled tag sub <name> <from> <to> !tag sub invite discord.gg/abc123 discord.gg/xyz999 Replaces every occurance of from_string with to_string in an already existing tag. This can be extremely useful for expired invite links, slightly outdated information, or anything else that allows you to systematically correct your mistakes. [tag list|command|taglist] -- Lists all of the tags on the server tag share <name> !tag share picross Creates a shareable link of a tag so that other users can import it to their servers.","title":"Tags"},{"location":"tags-and-triggers/collection/","text":"Collection of high quality tags On this page some of the more clever and technical tags will be showcased. Want your creation featured here? Post it in #show off in the support server and be a little lucky. I value creativity and novel solutions more than advanced tagscript usage. Big brain tags Tags that really showcase how powerful tagscript can be !owi - An Overwatch matchup tag by Raffael#7777 https://carl.gg/t/45738 Overwatch Info tag. Follow the command with the name of an Overwatch Hero for information about their strengths and weaknesses. !cgol - Conway's game of life by Dungo#6650 https://carl.gg/t/41017 Usage: !cgol [num] To generate a number, you can either use the editor tag here https://carl.gg/t/41024 (which is super tedious) or you can draw a 8x6 board in binary and convert that into decimal. Example: !cgol 70509941227520 !newsm and !spin - slots by Raffael#7777 and RedAngel#0121 !newsm !spin Altered version of an older tag which adds message editing, custom payline and reasonable odds. Example gif of it in action !picross - The game picross implemented with tagscript by Dungo#6650 https://carl.gg/t/38184 Usage: !picross [code] The code is optional. If you don't put in a code, you'll get a random board. You can create a custom board by \"drawing\" a picture in binary, convert it into decimal and using that as your code. !hunt - A duckhunt implementation in tagscipt by dreny#5962 https://carl.gg/t/31757 !mine - A minesweeper implementation in tagscript by Dungo#6650 https://carl.gg/t/35755 !lightsout <id> - A lights out implementation in tagscript by Garfield#9600 https://carl.gg/t/34826 !pfuse - A pokemon fuser by Dungo#6650 https://carl.gg/t/29531 Type the command itself for a random fusion, or type in two gen 1 pokemon names/pokedex numbers to fuse them. Replace one of the names with random to randomize that pokemon. Utility tags !quote - A way to save quotes from members by vind#6818 https://carl.gg/t/36651 Quote command, deletes original command. Able to quote yourself and others. !todo - A todo list by Polar#5893 https://carl.gg/t/42959 Made an easy to use todo list using tags React with the checkmark to mark an item on the list as finished or react with the x to deny it! !cpoll - quickpoll with custom emojis by Dungo#6650 https://carl.gg/t/41636 Usage: !cpoll Only works for up to 5 answers. !submit - An image submission tag by Antimony#0051 https://carl.gg/t/32150 RENAME THE CHANNEL NAME FOR THIS TO WORK Looks like this !afk - A way to let others know you're afk by Raffael#7777 https://carl.gg/t/41176 AFK Tag. Creates an autoresponse with the trigger of the mention of the tag user. Follow it with \"on\" (without quotes) to create the trigger, and \"off\" to delete the trigger. If you type a message following \"on\" the message will be set as the away message, but if you leave it blank a default away message will be used. !serverstats - A human/bot counter by yee#4952 https://carl.gg/t/33471 !faq - A Discord and Carl-bot help tag by Deviation#8164 https://carl.gg/t/33841 Basic Discord and Carl-Bot FAQ , created by Deviation#8164 ; be sure to edit the channels described in the \"Extra Stuff\" section or remove that section entirely if your sever doesn't use the Starboard or the Suggestions function. Fun tags !whodoneit - A mini game by Deviation#8164 https://carl.gg/t/34022 !lovecalc - A love calculator by Samuel#1698 https://carl.gg/t/33424 Usage: !lovecalc <user> Another stolen command recreated with Carl-bot! It's time to know how much the bot thinks you are destined to be with another person. What it looks like !battle - A 'pokemon style arena battle' by RedAngel#0121 https://carl.gg/t/31280 This tag is inspired by a basically Pok\u00e9mon arena style battles... each channel is unique to a specific arena type and will not change. Make sure you tag someone! Those weeb commands every anime bot has by Samuel#1698 Have you ever felt the need for interactive useless anime commands!? Well you've come to the right place! I've got them all: !kiss <user> or !kiss https://carl.gg/t/32886 for some smoochs !lick <user> or !lick https://carl.gg/t/32880 for some licc !bite <user> or !bite https://carl.gg/t/32899 for some snacc !hug <user> or !hug https://carl.gg/t/32891 for some hugs !nuzzle <user>or !nuzzle https://carl.gg/t/32902 for some cuddles !slap <user> or !slap https://carl.gg/t/32933 for some violence Non anime interactive commands !kill [<user>|<yourself>] https://carl.gg/t/32904 for some sweet specific deaths !revive [<user>|<yourself>] https://carl.gg/t/32920 My users were roleplaying being dead and not talking and asked for this. Help tag !AnimeHelp https://carl.gg/t/32927 Displays a carlbot-like help embed with info about each of these commands. Slightly NSFW warning on some of them It's in the description of the tags","title":"Collection of high quality tags"},{"location":"tags-and-triggers/collection/#collection-of-high-quality-tags","text":"On this page some of the more clever and technical tags will be showcased. Want your creation featured here? Post it in #show off in the support server and be a little lucky. I value creativity and novel solutions more than advanced tagscript usage.","title":"Collection of high quality tags"},{"location":"tags-and-triggers/collection/#big-brain-tags","text":"Tags that really showcase how powerful tagscript can be !owi - An Overwatch matchup tag by Raffael#7777 https://carl.gg/t/45738 Overwatch Info tag. Follow the command with the name of an Overwatch Hero for information about their strengths and weaknesses. !cgol - Conway's game of life by Dungo#6650 https://carl.gg/t/41017 Usage: !cgol [num] To generate a number, you can either use the editor tag here https://carl.gg/t/41024 (which is super tedious) or you can draw a 8x6 board in binary and convert that into decimal. Example: !cgol 70509941227520 !newsm and !spin - slots by Raffael#7777 and RedAngel#0121 !newsm !spin Altered version of an older tag which adds message editing, custom payline and reasonable odds. Example gif of it in action !picross - The game picross implemented with tagscript by Dungo#6650 https://carl.gg/t/38184 Usage: !picross [code] The code is optional. If you don't put in a code, you'll get a random board. You can create a custom board by \"drawing\" a picture in binary, convert it into decimal and using that as your code. !hunt - A duckhunt implementation in tagscipt by dreny#5962 https://carl.gg/t/31757 !mine - A minesweeper implementation in tagscript by Dungo#6650 https://carl.gg/t/35755 !lightsout <id> - A lights out implementation in tagscript by Garfield#9600 https://carl.gg/t/34826 !pfuse - A pokemon fuser by Dungo#6650 https://carl.gg/t/29531 Type the command itself for a random fusion, or type in two gen 1 pokemon names/pokedex numbers to fuse them. Replace one of the names with random to randomize that pokemon.","title":"Big brain tags"},{"location":"tags-and-triggers/collection/#utility-tags","text":"!quote - A way to save quotes from members by vind#6818 https://carl.gg/t/36651 Quote command, deletes original command. Able to quote yourself and others. !todo - A todo list by Polar#5893 https://carl.gg/t/42959 Made an easy to use todo list using tags React with the checkmark to mark an item on the list as finished or react with the x to deny it! !cpoll - quickpoll with custom emojis by Dungo#6650 https://carl.gg/t/41636 Usage: !cpoll Only works for up to 5 answers. !submit - An image submission tag by Antimony#0051 https://carl.gg/t/32150 RENAME THE CHANNEL NAME FOR THIS TO WORK Looks like this !afk - A way to let others know you're afk by Raffael#7777 https://carl.gg/t/41176 AFK Tag. Creates an autoresponse with the trigger of the mention of the tag user. Follow it with \"on\" (without quotes) to create the trigger, and \"off\" to delete the trigger. If you type a message following \"on\" the message will be set as the away message, but if you leave it blank a default away message will be used. !serverstats - A human/bot counter by yee#4952 https://carl.gg/t/33471 !faq - A Discord and Carl-bot help tag by Deviation#8164 https://carl.gg/t/33841 Basic Discord and Carl-Bot FAQ , created by Deviation#8164 ; be sure to edit the channels described in the \"Extra Stuff\" section or remove that section entirely if your sever doesn't use the Starboard or the Suggestions function.","title":"Utility tags"},{"location":"tags-and-triggers/collection/#fun-tags","text":"!whodoneit - A mini game by Deviation#8164 https://carl.gg/t/34022 !lovecalc - A love calculator by Samuel#1698 https://carl.gg/t/33424 Usage: !lovecalc <user> Another stolen command recreated with Carl-bot! It's time to know how much the bot thinks you are destined to be with another person. What it looks like !battle - A 'pokemon style arena battle' by RedAngel#0121 https://carl.gg/t/31280 This tag is inspired by a basically Pok\u00e9mon arena style battles... each channel is unique to a specific arena type and will not change. Make sure you tag someone! Those weeb commands every anime bot has by Samuel#1698 Have you ever felt the need for interactive useless anime commands!? Well you've come to the right place! I've got them all: !kiss <user> or !kiss https://carl.gg/t/32886 for some smoochs !lick <user> or !lick https://carl.gg/t/32880 for some licc !bite <user> or !bite https://carl.gg/t/32899 for some snacc !hug <user> or !hug https://carl.gg/t/32891 for some hugs !nuzzle <user>or !nuzzle https://carl.gg/t/32902 for some cuddles !slap <user> or !slap https://carl.gg/t/32933 for some violence Non anime interactive commands !kill [<user>|<yourself>] https://carl.gg/t/32904 for some sweet specific deaths !revive [<user>|<yourself>] https://carl.gg/t/32920 My users were roleplaying being dead and not talking and asked for this. Help tag !AnimeHelp https://carl.gg/t/32927 Displays a carlbot-like help embed with info about each of these commands. Slightly NSFW warning on some of them It's in the description of the tags","title":"Fun tags"},{"location":"tags-and-triggers/tags-advanced-usage/","text":"Tags - Advanced usage Tags are easy to use, but very powerful. With some ingenuity you can create your own, dynamic commands. To aid with this, dynamic \"blocks\" can be added. It is for instance entirely possible to create an 8ball command, a !hug command and many other things using just tags. To build a tag you will need to combine various blocks to tell the tag what you want it to do. These blocks are split into rough categories based on their behaviour or characteristics: Default Arguments Tagscript comes with a few default arguments. These are: {unix} - Unix time, useful for math blocks {uses} - The amount of times the tag has been used {args} - The arguments (words used) after the tag invocation. !foo bar baz means {args}==bar baz {user} - Nickname of the user that used the tag {target} - Like user, except if you mention someone, this variable works for the mentioned user. If you do not mention someone, target will act as user and reference the tag user. {server} - The name of the server {mention} - Mentions the user of the tag Discord Object Adapters Additionally, tagscript 2.0 has better support for various discord objects like members, channels and servers. We call these 'adapters' and let you access certain properties that previously would have been too specific to justify putting in. To access a property, you put the property name in parens like {user(id)} Right now for tags there are four object adapters: {user}, {target}, {channel} and {server}. {user} & {target} (avatar): The user's avatar (id): The user's id (mention): a string to mention the user (created_at): yyyy-mm-dd HH.MM.SS (joined_at): yyyy-mm-dd HH.MM.SS (color): hex code (name): their actual username (position): their position in the role hierarchy {server} (icon): server icon link (id): server id (owner): name#discrim format of the server owner (random): random member (randomonline): random member who is online (randomoffline): random member who is offline (members): number of members: (bots): number of bots (humans): number of humans (roles): number of roles (channels): number of channels (created_at): when the server was created {channel} (id): the channel id (topic): the channel topic (slowmode): the current slowmode delay (position): the channel's position (mention): clickable link to the channel Meta Blocks Meta blocks always execute when included in a tag, and thus only one of each block can be included in the tag structure. Additionally because they always execute, they must stay outside of conditional statements, although conditional statements can be inside some of them. Command Blocks {cmd: temp stockholm} {c:temprole {args(1)} MediaMute {args(2+)}} Do you think that !info really should be called !whois ? with command blocks you can do just that. example !tag + whois {cmd: info {args}} Actions Blocks {dm} Redirects output as a direct message to the user who uses the command. {delete} Deletes the message or invocation that triggered the tag. {silence} Silences the output of any command being used. {override} This is LITERALLY per-command modrole and allows for some neat new commands. Redirection blocks {redirect: channel} Redirects the output of the tag to the specified channel, the tag creator needs to have send message permissions in the pointed channel. example {user} says: {args} {redirect:screaming-out-loud} Requirement and Blacklist Blocks {require:channel, role} {blacklist:channel, role} Both accept roles and channels. Don't include the # just the channel name. Also accepts mention formatted channel or role id's. <#556675168634798111> or <@&554342061428572170> . Require will limit the tag to executing only when it is used by one of the roles listed, or in one of the channels listed. Blacklist is the reverse of require. If the tag is used by any role or in any channel listed in the blacklist block, the tag will not execute. Examples Example: {require:Cool kids} Word around the office is that {user} is kind of a big deal Example: {blacklist:Staff} You have no power here React Blocks Reacting to the tag {react: :regional_indicator_f: :cool_roblox_emoji:} Reacting to the author {reactu: :regional_indicator_f: :cool_roblox_emoji:} This will react to the tag {react:} or original message {reactu:} with the emojis placed inside the brackets after the : . Use a space to separate multiple emoji. Control Blocks Control blocks control the flow of your tag. They do so by evaluating conditions you provide inside parentheses, and if the condition is true, it will continue executing the payload, or what follows the : . To begin, you need to understand how to form a conditional statement. Each tag will take conditions in parentheses like so: {if(1==1):hello world} That would output hello world . In these parentheses you can use the following operators: == Checks if the two are the exact same. != Checks if the two are different in any way. > and >= checks if the number on the left side is larger than the one on the right. < and <= checks if the number on the left side is smaller than the one on the right. There are 4 basic control blocks: if - If the condition provided evaluates to true, the payload (portion after the : ) will continue. any - If any of the conditions provided evaluate to true, the payload will continue. Separate conditions with | . all - If all of the conditions provided evaluate to true, the payload will continue. Separate conditions with | . break - If the condition provided evaluates to true, the tag will stop and output ONLY the payload of the break block. Don't use break unless you are sure that is what you want. For the if , any , and all control blocks, an else statement can be added after the payload using a | . Examples {if({user(id)}=={target(id)}):You just mentioned yourself or didn't mention anyone.|{user(name)} says {target(name)} is a wuss!} {any(condition1|condition2|condition3):Will evaluate to true if any of the conditions is true} {all(condition1|condition2|condition3):Will evaluate to true if all of the conditions are true} {break(condition):Will return ONLY what's inside this bracket} Variable assignment Often in a tag you might reference the same string of words, or the same number multiple times. Assigning is your way of assigning a value to a name for reuse across your entire tag. You can use the following aliases to assign the example Content to varname : {=(varname):Content} {assign(varname):Content} {let(varname):Content} {var(varname):Content} The text inside the parentheses is the identifier for the text beyond the : . You can use the value stored in varname with brackets: {varname} Nested variables can be rather useful in some situations. Example {=(t1):A}{=(t2):B}{=(b1):C}{=(b2):D}{=(1stletter):{if({args}>5):t|b}}{=(2ndnumber):{if({args}<20):1|2}} allows you to use {{1stletter}{2ndnumber}} to conditionally reference any one of the first 4 variables. Some important information about both variables and {args} . You can reference individual elements out of the entire arguments or variable by treating {args} or {example} like an indexed (numbered) list using the spaces as the separators, and putting index # of the object you want from the list in parentheses following the variable name or args. If {example}==The quick brown fox jumps over the lazy dog , then {example(1)}==The , {example(5+)}==jumps over the lazy dog , and {example(+5)}==The quick brown fox jumps . You can also specify the separator you want used with a : . If {args}==Hello world, What did you expect, this is an example , then {args(1):,}==Hello world , and {args(2+):,}==What did you expect, this is an example . If the # you put in the parentheses is out of bounds for the variable or arguments, it will return the full {args}. You can also use {1} to mean {args(1)} , {2} to mean {args(2)} etc... List and Cycle Blocks: {list(index):elem, elem2...} {cycle(index):elem, elem2...} Lists and cycles are different in the sense that lists that receive an index (a #) out of bounds will return nothing while cycles are basically index = index % elements.length. Both lists and cycles are 0-indexed. RNG Blocks Sometimes you want some random in your tag. The Random block is used to have the tag interpreter pick a random value out of a list of objects you provide. You can use , to separate simple lists, but if you are using commas as part of actual grammar, you must instead use ~ to separate all the possible choices. Random lists {random:1,2,3} {#:Carl,Michael,Viosmic} {rand:Hello {user}, how are you?~Howdy {user}} Random lists randomly pick an element each time. Seeded Random {random(seed):a,b,c} {#(same):Carl,Michael,Viosmic} {rand({user(id)}):Hello {user}, how are you?~Howdy {user}} The parameter inside the parentheses after random denotes the Seed value. When the Seed value is provided it will 'lock' the choice to be the same every time it is given that same Seed value. Can be anything. Weighted Random {random:<weight>|a,<weight>|b,<weight>|c} Works as a shortcut for writing the same option many times. {random:4|a,2|b} is the same as {random:a,a,a,a,b,b} . Range Block: {range:1-200} Picks a random number between 1 and 200 (inclusive). Can be seeded just as {random} . 50/50 blocks: {50:Will anyone see me?} Has a 50% chance of outputting the payload. Manipulation Blocks These are blocks that manipulate a string in specific ways to achieve different desired results. This can be useful to concatenating a string onto the end of a search URL with the correct encoding for spaces, or to sanitize inputs before using the input in a conditional statement. They have many other potential uses as well as they are very versatile. {lower:HELLO} will result in hello {upper:hello} will result in HELLO {urlencode:hello there} will result in hello%20there {urlencode(+):hello there} will result in hello+there {join(_):hello friends} will result in hello_friends {replace(a,b):carl bot} will result in cbrl bot Math Blocks Supports basic mathematical operations: a+b addition a-b subtraction a*b multiplication a/b division a%b modulo abs(a) absolute value a^b exponent round(a) rounds numbers with decimals to the nearest whole number trunc(b) truncates numbers with decimals, i.e: chopping off the decimals Examples {math:1+1/(3^9)} {m:round(7.8)+trunc(8.9)} Timedelta Block: {td({unix}): 2020-01-01 00.00.00} Calculates the difference between two date, time, or datetime instances. The above example would tell you how long until New Years Day. Strf Time Blocks {strf(optional datetime): _strftime_} Returns the current time formatted according to python's strftime, see http://strftime.org/ for more information. Examples The current year is {strf:%Y} hehe Your account was created at {strf({user(created_at)}: %x}","title":"Tags - Advanced usage"},{"location":"tags-and-triggers/tags-advanced-usage/#tags-advanced-usage","text":"Tags are easy to use, but very powerful. With some ingenuity you can create your own, dynamic commands. To aid with this, dynamic \"blocks\" can be added. It is for instance entirely possible to create an 8ball command, a !hug command and many other things using just tags. To build a tag you will need to combine various blocks to tell the tag what you want it to do. These blocks are split into rough categories based on their behaviour or characteristics:","title":"Tags - Advanced usage"},{"location":"tags-and-triggers/tags-advanced-usage/#default-arguments","text":"Tagscript comes with a few default arguments. These are: {unix} - Unix time, useful for math blocks {uses} - The amount of times the tag has been used {args} - The arguments (words used) after the tag invocation. !foo bar baz means {args}==bar baz {user} - Nickname of the user that used the tag {target} - Like user, except if you mention someone, this variable works for the mentioned user. If you do not mention someone, target will act as user and reference the tag user. {server} - The name of the server {mention} - Mentions the user of the tag","title":"Default Arguments"},{"location":"tags-and-triggers/tags-advanced-usage/#discord-object-adapters","text":"Additionally, tagscript 2.0 has better support for various discord objects like members, channels and servers. We call these 'adapters' and let you access certain properties that previously would have been too specific to justify putting in. To access a property, you put the property name in parens like {user(id)} Right now for tags there are four object adapters: {user}, {target}, {channel} and {server}. {user} & {target} (avatar): The user's avatar (id): The user's id (mention): a string to mention the user (created_at): yyyy-mm-dd HH.MM.SS (joined_at): yyyy-mm-dd HH.MM.SS (color): hex code (name): their actual username (position): their position in the role hierarchy {server} (icon): server icon link (id): server id (owner): name#discrim format of the server owner (random): random member (randomonline): random member who is online (randomoffline): random member who is offline (members): number of members: (bots): number of bots (humans): number of humans (roles): number of roles (channels): number of channels (created_at): when the server was created {channel} (id): the channel id (topic): the channel topic (slowmode): the current slowmode delay (position): the channel's position (mention): clickable link to the channel","title":"Discord Object Adapters"},{"location":"tags-and-triggers/tags-advanced-usage/#meta-blocks","text":"Meta blocks always execute when included in a tag, and thus only one of each block can be included in the tag structure. Additionally because they always execute, they must stay outside of conditional statements, although conditional statements can be inside some of them.","title":"Meta Blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#command-blocks","text":"{cmd: temp stockholm} {c:temprole {args(1)} MediaMute {args(2+)}} Do you think that !info really should be called !whois ? with command blocks you can do just that. example !tag + whois {cmd: info {args}}","title":"Command Blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#actions-blocks","text":"{dm} Redirects output as a direct message to the user who uses the command. {delete} Deletes the message or invocation that triggered the tag. {silence} Silences the output of any command being used. {override} This is LITERALLY per-command modrole and allows for some neat new commands.","title":"Actions Blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#redirection-blocks","text":"{redirect: channel} Redirects the output of the tag to the specified channel, the tag creator needs to have send message permissions in the pointed channel. example {user} says: {args} {redirect:screaming-out-loud}","title":"Redirection blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#requirement-and-blacklist-blocks","text":"{require:channel, role} {blacklist:channel, role} Both accept roles and channels. Don't include the # just the channel name. Also accepts mention formatted channel or role id's. <#556675168634798111> or <@&554342061428572170> . Require will limit the tag to executing only when it is used by one of the roles listed, or in one of the channels listed. Blacklist is the reverse of require. If the tag is used by any role or in any channel listed in the blacklist block, the tag will not execute. Examples Example: {require:Cool kids} Word around the office is that {user} is kind of a big deal Example: {blacklist:Staff} You have no power here","title":"Requirement and Blacklist Blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#react-blocks","text":"Reacting to the tag {react: :regional_indicator_f: :cool_roblox_emoji:} Reacting to the author {reactu: :regional_indicator_f: :cool_roblox_emoji:} This will react to the tag {react:} or original message {reactu:} with the emojis placed inside the brackets after the : . Use a space to separate multiple emoji.","title":"React Blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#control-blocks","text":"Control blocks control the flow of your tag. They do so by evaluating conditions you provide inside parentheses, and if the condition is true, it will continue executing the payload, or what follows the : . To begin, you need to understand how to form a conditional statement. Each tag will take conditions in parentheses like so: {if(1==1):hello world} That would output hello world . In these parentheses you can use the following operators: == Checks if the two are the exact same. != Checks if the two are different in any way. > and >= checks if the number on the left side is larger than the one on the right. < and <= checks if the number on the left side is smaller than the one on the right. There are 4 basic control blocks: if - If the condition provided evaluates to true, the payload (portion after the : ) will continue. any - If any of the conditions provided evaluate to true, the payload will continue. Separate conditions with | . all - If all of the conditions provided evaluate to true, the payload will continue. Separate conditions with | . break - If the condition provided evaluates to true, the tag will stop and output ONLY the payload of the break block. Don't use break unless you are sure that is what you want. For the if , any , and all control blocks, an else statement can be added after the payload using a | . Examples {if({user(id)}=={target(id)}):You just mentioned yourself or didn't mention anyone.|{user(name)} says {target(name)} is a wuss!} {any(condition1|condition2|condition3):Will evaluate to true if any of the conditions is true} {all(condition1|condition2|condition3):Will evaluate to true if all of the conditions are true} {break(condition):Will return ONLY what's inside this bracket}","title":"Control Blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#variable-assignment","text":"Often in a tag you might reference the same string of words, or the same number multiple times. Assigning is your way of assigning a value to a name for reuse across your entire tag. You can use the following aliases to assign the example Content to varname : {=(varname):Content} {assign(varname):Content} {let(varname):Content} {var(varname):Content} The text inside the parentheses is the identifier for the text beyond the : . You can use the value stored in varname with brackets: {varname} Nested variables can be rather useful in some situations. Example {=(t1):A}{=(t2):B}{=(b1):C}{=(b2):D}{=(1stletter):{if({args}>5):t|b}}{=(2ndnumber):{if({args}<20):1|2}} allows you to use {{1stletter}{2ndnumber}} to conditionally reference any one of the first 4 variables. Some important information about both variables and {args} . You can reference individual elements out of the entire arguments or variable by treating {args} or {example} like an indexed (numbered) list using the spaces as the separators, and putting index # of the object you want from the list in parentheses following the variable name or args. If {example}==The quick brown fox jumps over the lazy dog , then {example(1)}==The , {example(5+)}==jumps over the lazy dog , and {example(+5)}==The quick brown fox jumps . You can also specify the separator you want used with a : . If {args}==Hello world, What did you expect, this is an example , then {args(1):,}==Hello world , and {args(2+):,}==What did you expect, this is an example . If the # you put in the parentheses is out of bounds for the variable or arguments, it will return the full {args}. You can also use {1} to mean {args(1)} , {2} to mean {args(2)} etc... List and Cycle Blocks: {list(index):elem, elem2...} {cycle(index):elem, elem2...} Lists and cycles are different in the sense that lists that receive an index (a #) out of bounds will return nothing while cycles are basically index = index % elements.length. Both lists and cycles are 0-indexed.","title":"Variable assignment"},{"location":"tags-and-triggers/tags-advanced-usage/#rng-blocks","text":"Sometimes you want some random in your tag. The Random block is used to have the tag interpreter pick a random value out of a list of objects you provide. You can use , to separate simple lists, but if you are using commas as part of actual grammar, you must instead use ~ to separate all the possible choices.","title":"RNG Blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#random-lists","text":"{random:1,2,3} {#:Carl,Michael,Viosmic} {rand:Hello {user}, how are you?~Howdy {user}} Random lists randomly pick an element each time.","title":"Random lists"},{"location":"tags-and-triggers/tags-advanced-usage/#seeded-random","text":"{random(seed):a,b,c} {#(same):Carl,Michael,Viosmic} {rand({user(id)}):Hello {user}, how are you?~Howdy {user}} The parameter inside the parentheses after random denotes the Seed value. When the Seed value is provided it will 'lock' the choice to be the same every time it is given that same Seed value. Can be anything.","title":"Seeded Random"},{"location":"tags-and-triggers/tags-advanced-usage/#weighted-random","text":"{random:<weight>|a,<weight>|b,<weight>|c} Works as a shortcut for writing the same option many times. {random:4|a,2|b} is the same as {random:a,a,a,a,b,b} . Range Block: {range:1-200} Picks a random number between 1 and 200 (inclusive). Can be seeded just as {random} . 50/50 blocks: {50:Will anyone see me?} Has a 50% chance of outputting the payload.","title":"Weighted Random"},{"location":"tags-and-triggers/tags-advanced-usage/#manipulation-blocks","text":"These are blocks that manipulate a string in specific ways to achieve different desired results. This can be useful to concatenating a string onto the end of a search URL with the correct encoding for spaces, or to sanitize inputs before using the input in a conditional statement. They have many other potential uses as well as they are very versatile. {lower:HELLO} will result in hello {upper:hello} will result in HELLO {urlencode:hello there} will result in hello%20there {urlencode(+):hello there} will result in hello+there {join(_):hello friends} will result in hello_friends {replace(a,b):carl bot} will result in cbrl bot","title":"Manipulation Blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#math-blocks","text":"Supports basic mathematical operations: a+b addition a-b subtraction a*b multiplication a/b division a%b modulo abs(a) absolute value a^b exponent round(a) rounds numbers with decimals to the nearest whole number trunc(b) truncates numbers with decimals, i.e: chopping off the decimals Examples {math:1+1/(3^9)} {m:round(7.8)+trunc(8.9)}","title":"Math Blocks"},{"location":"tags-and-triggers/tags-advanced-usage/#timedelta-block","text":"{td({unix}): 2020-01-01 00.00.00} Calculates the difference between two date, time, or datetime instances. The above example would tell you how long until New Years Day.","title":"Timedelta Block:"},{"location":"tags-and-triggers/tags-advanced-usage/#strf-time-blocks","text":"{strf(optional datetime): _strftime_} Returns the current time formatted according to python's strftime, see http://strftime.org/ for more information. Examples The current year is {strf:%Y} hehe Your account was created at {strf({user(created_at)}: %x}","title":"Strf Time Blocks"},{"location":"tags-and-triggers/triggers/","text":"Triggers Warning Autoresponses are not custom commands, if you want things that are triggered by a prefix and a keyword, see the tag section. They offer more functionality, better editing capabilities, will never have a limit to them and are just generally nicer for their intended purpose. Name Example Usage [ar|autoresponse] -- Lists the triggers, and ignores for the server ar list -- Lists all the triggers in a paginated fashion ar [add|create] <trigger> <response> !ar add \"hello there\" Hello! I'm a bot created by carl :muscle: Adds a trigger that carlbot will look for and say/do something when it is said. This command looks for a substring within the message, meaning that if you add hi then t hi s will also match. See the next command if that is too greedy for you. ar [strict|s] <trigger> <response> !ar strict \"its coming home\" {reactu: \u26bd\ufe0f} This works a lot like normal ar add with one vital exception: it looks for exact sequences of words, rather than substrings. What this means is that if you add the strict trigger hell and someone says hello it will not match, it also means that triggers with more than one word requires an exact match per word (this is a lot more reasonable to use than this text makes it out to be). ar [exact|e] <trigger> <response> !ar exact \"hey guys\" Hello! This matches if the content of a message is the same as the trigger. Some exceptions such as punctuation and capitalization applies. ar [startswith|sw] <trigger> <response> !ar sw \"how do i\" read the wiki! Matches if the start of the message matches ar [endswith|ew] <trigger> <response> !ar ew \"i think\" no you don't Like startswith except if it ends with it. ar [remove|del|-|delete] <trigger> !ar del its coming home Removes an autoresponse ar clear -- Removes all autoresponses (with a prompt) ar [channel|cs] <trigger> <response> !ar channel \"king crimson\" HOW DOES KING CRIMSON WORK I DON'T UNDERSTAND Like a normal autoresponse except it only listens in the channel you used the command in. Note: This will bypass any channel ignores (member ignores still work). ar ignore <members or channels...> !ar ignore @Carl#0001 @Kintark#0588 #general @idiotuser#1337 #welcome Blocks channels and or users from triggering responses ar unignore <members or channels...> !ar unignore #general @Carl#0001 Undoes what !ar ignore does Autoreactions support most of tagscript, see Tags - Advanced usage to learn more","title":"Triggers"},{"location":"tags-and-triggers/triggers/#triggers","text":"Warning Autoresponses are not custom commands, if you want things that are triggered by a prefix and a keyword, see the tag section. They offer more functionality, better editing capabilities, will never have a limit to them and are just generally nicer for their intended purpose. Name Example Usage [ar|autoresponse] -- Lists the triggers, and ignores for the server ar list -- Lists all the triggers in a paginated fashion ar [add|create] <trigger> <response> !ar add \"hello there\" Hello! I'm a bot created by carl :muscle: Adds a trigger that carlbot will look for and say/do something when it is said. This command looks for a substring within the message, meaning that if you add hi then t hi s will also match. See the next command if that is too greedy for you. ar [strict|s] <trigger> <response> !ar strict \"its coming home\" {reactu: \u26bd\ufe0f} This works a lot like normal ar add with one vital exception: it looks for exact sequences of words, rather than substrings. What this means is that if you add the strict trigger hell and someone says hello it will not match, it also means that triggers with more than one word requires an exact match per word (this is a lot more reasonable to use than this text makes it out to be). ar [exact|e] <trigger> <response> !ar exact \"hey guys\" Hello! This matches if the content of a message is the same as the trigger. Some exceptions such as punctuation and capitalization applies. ar [startswith|sw] <trigger> <response> !ar sw \"how do i\" read the wiki! Matches if the start of the message matches ar [endswith|ew] <trigger> <response> !ar ew \"i think\" no you don't Like startswith except if it ends with it. ar [remove|del|-|delete] <trigger> !ar del its coming home Removes an autoresponse ar clear -- Removes all autoresponses (with a prompt) ar [channel|cs] <trigger> <response> !ar channel \"king crimson\" HOW DOES KING CRIMSON WORK I DON'T UNDERSTAND Like a normal autoresponse except it only listens in the channel you used the command in. Note: This will bypass any channel ignores (member ignores still work). ar ignore <members or channels...> !ar ignore @Carl#0001 @Kintark#0588 #general @idiotuser#1337 #welcome Blocks channels and or users from triggering responses ar unignore <members or channels...> !ar unignore #general @Carl#0001 Undoes what !ar ignore does Autoreactions support most of tagscript, see Tags - Advanced usage to learn more","title":"Triggers"},{"location":"utilities/announcements/","text":"Announcements Info Timezones suck, use the dashboard at https://carl.gg to create autofeeds with your local timezone Info The id argument is the autofeed id which the bot spits out when you create an autofeed or when you do !af Name Example Usage feed -- Lists all the feeds that have been set up in the server. feed create <name> <role> !feed create got game of thrones Creates a feed in the channel the command is used in with a specific name and a specific role that will be mentioned. announce !feed announce got Hey guys, everyone dies Makes an announcement to the specified feed. feed [delete|-|del|remove] !feed delete got Deletes a feed. Note: This does not delete the associated role, so if you created one specifically for a feed, you need to delete it. !feed clear -- Deletes ALL feeds from the server. !feed move !feed move bot #announcements Moves a feed to a specified channel. Note: You need send messages permissions in the channel you move it to. [af|autofeed] -- Lists all autofeeds set up in the server. autofeed <role> <time> <message> !autofeed \"final fantasy xiv\" 18h The servers have been reset, get out there! Normal autofeeds (the ones created by this command) will ping the role specified when setting them up. autofeed silent <time> <message> !autofeed silent 2 hours Vote for carlbot on discord bots! Like a normal autofeed except it does not have a role associated with it and thus, does not ping anything. autofeed silence <id> !autofeed silence 37 Silences an already existing normal feed. autofeed repeat <id> !autofeed repeat 13 24h Marks an autofeed to be repeated. This keeps going until you delete the autofeed. autofeed remove <id> !autofeed remove 77 Removes an autofeed autofeed clear -- Removes ALL autofeeds. autofeed move <id> <#channel> !autofeed move 73 #general Moves an autofeed to a specified channel. Note: You need send messages permissions in the channel you move it to. What are feeds? Feeds are a way for you to make announcements and ping a specific role without having to deal with the annoyances and potential abuse from either having a pingable role or manually toggling inbetween pingable and not. Automatic feeds on the other hand can be seen as group reminders, and they share a lot of functionality with reminders.","title":"Announcements"},{"location":"utilities/announcements/#announcements","text":"Info Timezones suck, use the dashboard at https://carl.gg to create autofeeds with your local timezone Info The id argument is the autofeed id which the bot spits out when you create an autofeed or when you do !af Name Example Usage feed -- Lists all the feeds that have been set up in the server. feed create <name> <role> !feed create got game of thrones Creates a feed in the channel the command is used in with a specific name and a specific role that will be mentioned. announce !feed announce got Hey guys, everyone dies Makes an announcement to the specified feed. feed [delete|-|del|remove] !feed delete got Deletes a feed. Note: This does not delete the associated role, so if you created one specifically for a feed, you need to delete it. !feed clear -- Deletes ALL feeds from the server. !feed move !feed move bot #announcements Moves a feed to a specified channel. Note: You need send messages permissions in the channel you move it to. [af|autofeed] -- Lists all autofeeds set up in the server. autofeed <role> <time> <message> !autofeed \"final fantasy xiv\" 18h The servers have been reset, get out there! Normal autofeeds (the ones created by this command) will ping the role specified when setting them up. autofeed silent <time> <message> !autofeed silent 2 hours Vote for carlbot on discord bots! Like a normal autofeed except it does not have a role associated with it and thus, does not ping anything. autofeed silence <id> !autofeed silence 37 Silences an already existing normal feed. autofeed repeat <id> !autofeed repeat 13 24h Marks an autofeed to be repeated. This keeps going until you delete the autofeed. autofeed remove <id> !autofeed remove 77 Removes an autofeed autofeed clear -- Removes ALL autofeeds. autofeed move <id> <#channel> !autofeed move 73 #general Moves an autofeed to a specified channel. Note: You need send messages permissions in the channel you move it to. What are feeds? Feeds are a way for you to make announcements and ping a specific role without having to deal with the annoyances and potential abuse from either having a pingable role or manually toggling inbetween pingable and not. Automatic feeds on the other hand can be seen as group reminders, and they share a lot of functionality with reminders.","title":"Announcements"},{"location":"utilities/embeds/","text":"Embeds Info !cembed and !ecembed take raw json as their arguments. If you're new to embeds, using leovoel's embed visualizer can be helpful as it shows you how it will end up looking instantly. Name Example Usage !embed [channel] <color> <title | description> !embed #get-roles eeaaee I'm a title | and I'm the description Creates a simple embed with the colored strip, a title and a description. !editembed <msg_id> <title | description> !editembed 32538901189123 I'm a new title | and I'm an updated description Edits a message in the same format you create basic embeds !rr color [channel] <msg_id> <color> !rr color 182923492394927 eeeaaa Edits the color strip on the left side of the embed. If the embed is not a reaction role embed, you need to either use the command in the same channel as the embed or specify it as the first argument. !cembed [channel] <json> !cembed #secret {\"title\": \"hello world\"} Also accepts a pastebin link since it can be bigger than 2000 characters. !ecembed <msg_id> <channel> <json> !ecembed 31203123191 #secret {\"title\": \"Woah, a new title!\"} Edits ANY embed the bot has posted. !embedsource <msg_id> [channel] !embedsource 9312838121123 #bilderberg Gets the raw json from an embed","title":"Embeds"},{"location":"utilities/embeds/#embeds","text":"Info !cembed and !ecembed take raw json as their arguments. If you're new to embeds, using leovoel's embed visualizer can be helpful as it shows you how it will end up looking instantly. Name Example Usage !embed [channel] <color> <title | description> !embed #get-roles eeaaee I'm a title | and I'm the description Creates a simple embed with the colored strip, a title and a description. !editembed <msg_id> <title | description> !editembed 32538901189123 I'm a new title | and I'm an updated description Edits a message in the same format you create basic embeds !rr color [channel] <msg_id> <color> !rr color 182923492394927 eeeaaa Edits the color strip on the left side of the embed. If the embed is not a reaction role embed, you need to either use the command in the same channel as the embed or specify it as the first argument. !cembed [channel] <json> !cembed #secret {\"title\": \"hello world\"} Also accepts a pastebin link since it can be bigger than 2000 characters. !ecembed <msg_id> <channel> <json> !ecembed 31203123191 #secret {\"title\": \"Woah, a new title!\"} Edits ANY embed the bot has posted. !embedsource <msg_id> [channel] !embedsource 9312838121123 #bilderberg Gets the raw json from an embed","title":"Embeds"},{"location":"utilities/highlights-pager/","text":"Highlights/pager Highlights Highlighting means you will receive a message when your keyword is said in chat. The matching is approximate and works really similarly to discord search (basically, if you search your keyword in discord search, you will find messages that would trigger the highlight, roughly speaking). Info You will only be highlighted if you have access to the channel and if you haven't posted in the past 5 minutes. Name Example Usage hl [+|add] <word(s)> !hl add carl Adds a word that will notify you. IMPORTANT: The bot tries to guess when you're aware of what's being typed and won't notify you if you've typed in the past 5 minutes, to see if your highlights work, please use !hl match <sentence> . Additionally, when adding a multi-word highlight, it will check for a sequence of words, not a substring. hl [m|match] <sentence> !hl match carl is cute Tests a sentence and sees which if any words would notify you. hl block <members/channels> !hl block @Kintark#0588 #general @angryloser#0001 #bilderberg Messages sent in this channel/from this user won't notify you. hl unblock <members/channels> !hl unblock #general Unblocks the user/channel hl show -- Shows which words you have set to highlight you hl clear -- Removes all of your highlighted words hl del <word> !hl del math Removes a word from your highlighted words","title":"Highlights/pager"},{"location":"utilities/highlights-pager/#highlightspager","text":"","title":"Highlights/pager"},{"location":"utilities/highlights-pager/#highlights","text":"Highlighting means you will receive a message when your keyword is said in chat. The matching is approximate and works really similarly to discord search (basically, if you search your keyword in discord search, you will find messages that would trigger the highlight, roughly speaking). Info You will only be highlighted if you have access to the channel and if you haven't posted in the past 5 minutes. Name Example Usage hl [+|add] <word(s)> !hl add carl Adds a word that will notify you. IMPORTANT: The bot tries to guess when you're aware of what's being typed and won't notify you if you've typed in the past 5 minutes, to see if your highlights work, please use !hl match <sentence> . Additionally, when adding a multi-word highlight, it will check for a sequence of words, not a substring. hl [m|match] <sentence> !hl match carl is cute Tests a sentence and sees which if any words would notify you. hl block <members/channels> !hl block @Kintark#0588 #general @angryloser#0001 #bilderberg Messages sent in this channel/from this user won't notify you. hl unblock <members/channels> !hl unblock #general Unblocks the user/channel hl show -- Shows which words you have set to highlight you hl clear -- Removes all of your highlighted words hl del <word> !hl del math Removes a word from your highlighted words","title":"Highlights"},{"location":"utilities/reminders-timers/","text":"Reminders/Timers Info These reminders require you to have dms open from at least one server you share with the bot Name Example Usage [rm|reminder|remindme|timer] !rm 1d23h pick up the next mission on your hunter. !rm buy groceries tomorrow at noon. Sets up a reminder to send a message reminding you about the thing. If you use a human time like \"at noon\" it uses UTC. rm mine -- Shows your reminders. rm [-|remove|del] <id> -- Removes the reminder with that id. sub <id> !sub 97 Copies a reminder someone else made. This means you own the reminder, that person deleting their reminder will have no impact. !rm clear -- Removes all your reminders from the server (or ALL if used in DMs) !rm repeat <id> <interval> !rm repeat 247 20d Sets a timer to be repeated. !rm when <id> !rm when 247 Shows some information about a timer created in the server (or from you, if used in DMs)","title":"Reminders/Timers"},{"location":"utilities/reminders-timers/#reminderstimers","text":"Info These reminders require you to have dms open from at least one server you share with the bot Name Example Usage [rm|reminder|remindme|timer] !rm 1d23h pick up the next mission on your hunter. !rm buy groceries tomorrow at noon. Sets up a reminder to send a message reminding you about the thing. If you use a human time like \"at noon\" it uses UTC. rm mine -- Shows your reminders. rm [-|remove|del] <id> -- Removes the reminder with that id. sub <id> !sub 97 Copies a reminder someone else made. This means you own the reminder, that person deleting their reminder will have no impact. !rm clear -- Removes all your reminders from the server (or ALL if used in DMs) !rm repeat <id> <interval> !rm repeat 247 20d Sets a timer to be repeated. !rm when <id> !rm when 247 Shows some information about a timer created in the server (or from you, if used in DMs)","title":"Reminders/Timers"},{"location":"utilities/starboard/","text":"Starboard Info Starboard is a way to 'star' (think like, upvote etc.) a message and have it show up in a separate channel. You do this by reacting to the message with \u2b50 (:star:) . A common sentence used to describe the functionality of a starboard is 'democratic pins' Name Example Usage starboard [name='starboard'] !starboard meme-archive Creates the starboard. star limit <number> !star limit 3 Sets the amount of stars required for a post to get posted to the starboard star stats [@member] !star stats @Carl#0080 Shows some information about the server's or user's star giving patterns. star top -- Returns the most starred posts star nsfw -- Toggles nsfw stars. With this enabled, posts starred in channels marked as nsfw will embed star self -- Toggles being able to star your own posts star show <id> !star show 463069834968825856 Shows a starred post from the starboard in the channel the command was used in, you can find the id in the footer of each starboard entry. star jump !star jump Will add a jump link to the starred message. Star messages, have them posted to a channel. It's a fun way to save funny/interesting messages in a place where everyone can see them.","title":"Starboard"},{"location":"utilities/starboard/#starboard","text":"Info Starboard is a way to 'star' (think like, upvote etc.) a message and have it show up in a separate channel. You do this by reacting to the message with \u2b50 (:star:) . A common sentence used to describe the functionality of a starboard is 'democratic pins' Name Example Usage starboard [name='starboard'] !starboard meme-archive Creates the starboard. star limit <number> !star limit 3 Sets the amount of stars required for a post to get posted to the starboard star stats [@member] !star stats @Carl#0080 Shows some information about the server's or user's star giving patterns. star top -- Returns the most starred posts star nsfw -- Toggles nsfw stars. With this enabled, posts starred in channels marked as nsfw will embed star self -- Toggles being able to star your own posts star show <id> !star show 463069834968825856 Shows a starred post from the starboard in the channel the command was used in, you can find the id in the footer of each starboard entry. star jump !star jump Will add a jump link to the starred message. Star messages, have them posted to a channel. It's a fun way to save funny/interesting messages in a place where everyone can see them.","title":"Starboard"},{"location":"utilities/suggestions/","text":"Suggestions Info All commands require !suggestion channel [#channel] to have been used in order to work, please start with that. Name Example Usage suggestion channel [#channel] !suggestion channel #cool-server-feedback Sets a channel as the suggestion channel or creates a new one if you don't mention one. suggestion dm -- Toggles between sending the person who suggested something upon a moderator deciding on it. suggestion limit <number> -- The color of the approved/denied suggestions are based on the difference in upvotes and downvotes on the original post. This threshold is the amount of votes required for the decision to be fully green/red. suggestion move [#channel] -- This will let you set a secondary channel to announce the suggestions that admins have approved/denied. Just like !suggestion channel this can be left blank to create a channel. suggestion edit -- Edits the message instead of reposting it in the same channel. If a move channel has been specified, it's posted there and edited in the original channel. suggestion submit -- Lets you set a single channel where people are allowed to make suggestions. This can be useful if you don't want everyone to be able to make suggestions suggestion -- Displays the server's current suggestion config. suggest <message> !suggest The bot should be able to announce new youtube videos Creates a suggestion approve <id> [reason] !approve 5 Great idea man, will add it for sure Approves of a suggestion. deny <id> [reason] !deny 6 This is literally impossible due to how discord works Denies a suggestion consider <id> [reason] !consider 4 I'm not sure if this would really add that much, but if the people want it... Marks a suggestion as being considered. implemented <id> [reason] !implemented 5 the command is !youtubesub \\ Marks a suggestion as implemented !suggestion anon -- Toggles member's name and avatar not appearing when making a suggestion. (Not retroactive)","title":"Suggestions"},{"location":"utilities/suggestions/#suggestions","text":"Info All commands require !suggestion channel [#channel] to have been used in order to work, please start with that. Name Example Usage suggestion channel [#channel] !suggestion channel #cool-server-feedback Sets a channel as the suggestion channel or creates a new one if you don't mention one. suggestion dm -- Toggles between sending the person who suggested something upon a moderator deciding on it. suggestion limit <number> -- The color of the approved/denied suggestions are based on the difference in upvotes and downvotes on the original post. This threshold is the amount of votes required for the decision to be fully green/red. suggestion move [#channel] -- This will let you set a secondary channel to announce the suggestions that admins have approved/denied. Just like !suggestion channel this can be left blank to create a channel. suggestion edit -- Edits the message instead of reposting it in the same channel. If a move channel has been specified, it's posted there and edited in the original channel. suggestion submit -- Lets you set a single channel where people are allowed to make suggestions. This can be useful if you don't want everyone to be able to make suggestions suggestion -- Displays the server's current suggestion config. suggest <message> !suggest The bot should be able to announce new youtube videos Creates a suggestion approve <id> [reason] !approve 5 Great idea man, will add it for sure Approves of a suggestion. deny <id> [reason] !deny 6 This is literally impossible due to how discord works Denies a suggestion consider <id> [reason] !consider 4 I'm not sure if this would really add that much, but if the people want it... Marks a suggestion as being considered. implemented <id> [reason] !implemented 5 the command is !youtubesub \\ Marks a suggestion as implemented !suggestion anon -- Toggles member's name and avatar not appearing when making a suggestion. (Not retroactive)","title":"Suggestions"},{"location":"utilities/twitch-notifications/","text":"Twitch notifications Danger You have to set a twitch channel with !set twitch <#channel> before any notifications will be sent. Name Example Usage twitch <name> [alias] !twitch azortharion azor Adds the user with the alias. In the example given, the stream announcement will say \"azor is now live\". This command also removes a streamer if used again. twitch list -- Shows all registered streamers and when they were last online twitch online Shows all currently online streamers twitch own -- With this enabled, users can't have the streams they themselves added removed by non-mods, this is useful if you want to allow users to add their own streams to a server twitch mod -- If this is disabled, any user can add a stream of their choice twitch limit <number> !twitch limit 2 Restricts how many streams non-mods are allowed to add","title":"Twitch notifications"},{"location":"utilities/twitch-notifications/#twitch-notifications","text":"Danger You have to set a twitch channel with !set twitch <#channel> before any notifications will be sent. Name Example Usage twitch <name> [alias] !twitch azortharion azor Adds the user with the alias. In the example given, the stream announcement will say \"azor is now live\". This command also removes a streamer if used again. twitch list -- Shows all registered streamers and when they were last online twitch online Shows all currently online streamers twitch own -- With this enabled, users can't have the streams they themselves added removed by non-mods, this is useful if you want to allow users to add their own streams to a server twitch mod -- If this is disabled, any user can add a stream of their choice twitch limit <number> !twitch limit 2 Restricts how many streams non-mods are allowed to add","title":"Twitch notifications"},{"location":"utilities/uncategorized-utilities/","text":"Uncategorized utilities Name Example Usage poll <question> !poll should I sleep? Creates a yes/no poll where you vote with reactions quickpoll <question | answers...> !quickpoll best game?| wow | overwatch | only losers play games Use pipes | or commas to separate the questions and answers. The first arg is the question, all after that are individual answers. You can't mix pipes and commas, pipes are intended for polls where you want commas in the question or answer. [d|define] <word> !define well Shows the oxford dictionary's definition for the word. Note: due to the length of some definitions it might be a good idea to restrict this command to prevent abuse. wolfram !wa e ^ (pi * i) + 1 This is similar to going to wolframalpha and entering the text yourself. Doesn't support complicated answers. [pick|choice|select] <choices> !choose go to sleep, play overwatch Picks one of your specified arguments. Use commas for multiple words. activity [day/week/month/year] !activity week Defaults to month, shows the 25 most active members by postcount for the specified timespan (that the bot has seen) youngest !youngest Ranks members by account creation - Requires Manage Messages oldest !oldest Ranks members by account creation - Requires Manage Messages [ud|urbandictionary] <word> !ud cleveland steamer Returns the urbandictionary definition for your word. @everyone proof. (looking at you, b1nzy) [i|info] [@member] !i @Carl#0080 Returns Name, last 5 nicknames, id, postcount (that the bot has seen), creation date, server join date and some cool information related to these [weather|temp] [location] !weather stockholm If no city is specified, it will give you info for your set home. If used for the first time, that city will be set as your home. Since countries don't have weather (think about it) you have to be more specific. temp home <location> !temp home tampa Lets you set a city as your home for !temp to default to. [nicks|nicknames] [@user] -- Shows you your nicknames history, duplicates are moved to the end of the list. The names are ordered from oldest to newest. setnick <member> <name> !setnick @Carl#0080 Do not ping Changes the user's nickname. dice [sides] [rolls] !dice 6 Rolls a [sides] sided die [rolls] times. Defaults to 6 sides and 1 roll. roll [lower-[upper]] !roll 100-1100 Works just like in wow, defaults to 1 to 100. Changing just one number will change the upper bound. [flip|coin] -- Flips a coin avatar <member/ID> !avatar Shows the avatar of a mentioned user or yourself if you don't. Works even if the user doesn't share a server with the bot. Also works in dms, you creeps. serverinfo -- Displays server information. spacemychannel <channel> !spacemychannel #test-channel Removes the - and _ in channel names replacing with a space.","title":"Uncategorized utilities"},{"location":"utilities/uncategorized-utilities/#uncategorized-utilities","text":"Name Example Usage poll <question> !poll should I sleep? Creates a yes/no poll where you vote with reactions quickpoll <question | answers...> !quickpoll best game?| wow | overwatch | only losers play games Use pipes | or commas to separate the questions and answers. The first arg is the question, all after that are individual answers. You can't mix pipes and commas, pipes are intended for polls where you want commas in the question or answer. [d|define] <word> !define well Shows the oxford dictionary's definition for the word. Note: due to the length of some definitions it might be a good idea to restrict this command to prevent abuse. wolfram !wa e ^ (pi * i) + 1 This is similar to going to wolframalpha and entering the text yourself. Doesn't support complicated answers. [pick|choice|select] <choices> !choose go to sleep, play overwatch Picks one of your specified arguments. Use commas for multiple words. activity [day/week/month/year] !activity week Defaults to month, shows the 25 most active members by postcount for the specified timespan (that the bot has seen) youngest !youngest Ranks members by account creation - Requires Manage Messages oldest !oldest Ranks members by account creation - Requires Manage Messages [ud|urbandictionary] <word> !ud cleveland steamer Returns the urbandictionary definition for your word. @everyone proof. (looking at you, b1nzy) [i|info] [@member] !i @Carl#0080 Returns Name, last 5 nicknames, id, postcount (that the bot has seen), creation date, server join date and some cool information related to these [weather|temp] [location] !weather stockholm If no city is specified, it will give you info for your set home. If used for the first time, that city will be set as your home. Since countries don't have weather (think about it) you have to be more specific. temp home <location> !temp home tampa Lets you set a city as your home for !temp to default to. [nicks|nicknames] [@user] -- Shows you your nicknames history, duplicates are moved to the end of the list. The names are ordered from oldest to newest. setnick <member> <name> !setnick @Carl#0080 Do not ping Changes the user's nickname. dice [sides] [rolls] !dice 6 Rolls a [sides] sided die [rolls] times. Defaults to 6 sides and 1 roll. roll [lower-[upper]] !roll 100-1100 Works just like in wow, defaults to 1 to 100. Changing just one number will change the upper bound. [flip|coin] -- Flips a coin avatar <member/ID> !avatar Shows the avatar of a mentioned user or yourself if you don't. Works even if the user doesn't share a server with the bot. Also works in dms, you creeps. serverinfo -- Displays server information. spacemychannel <channel> !spacemychannel #test-channel Removes the - and _ in channel names replacing with a space.","title":"Uncategorized utilities"}]}